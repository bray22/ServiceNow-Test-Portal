{
    "project": {
        "name": "TheHub Client Documentation",
        "description": "Documentation displaying TheHub's client objects architecture",
        "version": "0.0.1",
        "url": "https://thehub.corp.emc.com/",
        "logo": "../ClientSrc/res/img/logo-full-115.png"
    },
    "files": {
        "ClientSrc\\js\\collection\\AlertCollection.js": {
            "name": "ClientSrc\\js\\collection\\AlertCollection.js",
            "modules": {},
            "classes": {
                "collection.AlertCollection": 1
            },
            "fors": {},
            "namespaces": {
                "collection": 1
            }
        },
        "ClientSrc\\js\\collection\\BroadcastCollection.js": {
            "name": "ClientSrc\\js\\collection\\BroadcastCollection.js",
            "modules": {},
            "classes": {
                "collection.BroadcastCollection": 1
            },
            "fors": {},
            "namespaces": {
                "collection": 1
            }
        },
        "ClientSrc\\js\\collection\\Collection.js": {
            "name": "ClientSrc\\js\\collection\\Collection.js",
            "modules": {},
            "classes": {
                "collection.Collection": 1
            },
            "fors": {},
            "namespaces": {
                "collection": 1
            }
        },
        "ClientSrc\\js\\collection\\DesktopCollection.js": {
            "name": "ClientSrc\\js\\collection\\DesktopCollection.js",
            "modules": {},
            "classes": {
                "collection.DesktopCollection": 1
            },
            "fors": {},
            "namespaces": {
                "collection": 1
            }
        },
        "ClientSrc\\js\\collection\\LayoutCollection.js": {
            "name": "ClientSrc\\js\\collection\\LayoutCollection.js",
            "modules": {},
            "classes": {
                "collection.LayoutCollection": 1
            },
            "fors": {},
            "namespaces": {
                "collection": 1
            }
        },
        "ClientSrc\\js\\collection\\NewsArticleCollection.js": {
            "name": "ClientSrc\\js\\collection\\NewsArticleCollection.js",
            "modules": {},
            "classes": {
                "collection.NewsArticleCollection": 1
            },
            "fors": {},
            "namespaces": {
                "collection": 1
            }
        },
        "ClientSrc\\js\\collection\\NewsCollection.js": {
            "name": "ClientSrc\\js\\collection\\NewsCollection.js",
            "modules": {},
            "classes": {
                "collection.NewsCollection": 1
            },
            "fors": {},
            "namespaces": {
                "collection": 1
            }
        },
        "ClientSrc\\js\\collection\\ServiceCollection.js": {
            "name": "ClientSrc\\js\\collection\\ServiceCollection.js",
            "modules": {},
            "classes": {
                "collection.ServiceCollection": 1
            },
            "fors": {},
            "namespaces": {
                "collection": 1
            }
        },
        "ClientSrc\\js\\collection\\SizeCollection.js": {
            "name": "ClientSrc\\js\\collection\\SizeCollection.js",
            "modules": {},
            "classes": {
                "collection.SizeCollection": 1
            },
            "fors": {},
            "namespaces": {
                "collection": 1
            }
        },
        "ClientSrc\\js\\collection\\WidgetCollection.js": {
            "name": "ClientSrc\\js\\collection\\WidgetCollection.js",
            "modules": {},
            "classes": {
                "collection.WidgetCollection": 1
            },
            "fors": {},
            "namespaces": {
                "collection": 1
            }
        },
        "ClientSrc\\js\\model\\AlertModel.js": {
            "name": "ClientSrc\\js\\model\\AlertModel.js",
            "modules": {},
            "classes": {
                "model.AlertModel": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "ClientSrc\\js\\model\\BroadcastModel.js": {
            "name": "ClientSrc\\js\\model\\BroadcastModel.js",
            "modules": {},
            "classes": {
                "model.BroadcastModel": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "ClientSrc\\js\\model\\DesktopModel.js": {
            "name": "ClientSrc\\js\\model\\DesktopModel.js",
            "modules": {},
            "classes": {
                "model.DesktopModel": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "ClientSrc\\js\\model\\HeartbeatModel.js": {
            "name": "ClientSrc\\js\\model\\HeartbeatModel.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "ClientSrc\\js\\model\\HubModel.js": {
            "name": "ClientSrc\\js\\model\\HubModel.js",
            "modules": {},
            "classes": {
                "model.HeartbeatModel": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "ClientSrc\\js\\model\\Model.js": {
            "name": "ClientSrc\\js\\model\\Model.js",
            "modules": {},
            "classes": {
                "model.Model": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "ClientSrc\\js\\model\\NewsArticleModel.js": {
            "name": "ClientSrc\\js\\model\\NewsArticleModel.js",
            "modules": {},
            "classes": {
                "model.NewsArticleModel": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "ClientSrc\\js\\model\\NewsChannelModel.js": {
            "name": "ClientSrc\\js\\model\\NewsChannelModel.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "ClientSrc\\js\\model\\ServiceModel.js": {
            "name": "ClientSrc\\js\\model\\ServiceModel.js",
            "modules": {},
            "classes": {
                "model.NewsChannelModel": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "ClientSrc\\js\\model\\SizeModel.js": {
            "name": "ClientSrc\\js\\model\\SizeModel.js",
            "modules": {},
            "classes": {
                "model.SizeModel": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "ClientSrc\\js\\model\\UserModel.js": {
            "name": "ClientSrc\\js\\model\\UserModel.js",
            "modules": {},
            "classes": {
                "model.UserModel": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "ClientSrc\\js\\model\\WidgetLayoutModel.js": {
            "name": "ClientSrc\\js\\model\\WidgetLayoutModel.js",
            "modules": {},
            "classes": {
                "model.WidgetLayoutModel": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "ClientSrc\\js\\model\\WidgetModel.js": {
            "name": "ClientSrc\\js\\model\\WidgetModel.js",
            "modules": {},
            "classes": {
                "model.WidgetModel": 1
            },
            "fors": {},
            "namespaces": {
                "model": 1
            }
        },
        "ClientSrc\\js\\util\\Ajax.js": {
            "name": "ClientSrc\\js\\util\\Ajax.js",
            "modules": {
                "Ajax": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "ClientSrc\\js\\util\\AnimHelpers.js": {
            "name": "ClientSrc\\js\\util\\AnimHelpers.js",
            "modules": {
                "AnimHelpers": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {
                "util": 1
            }
        },
        "ClientSrc\\js\\util\\Messaging.js": {
            "name": "ClientSrc\\js\\util\\Messaging.js",
            "modules": {
                "Messaging": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "ClientSrc\\js\\util\\Tween.js": {
            "name": "ClientSrc\\js\\util\\Tween.js",
            "modules": {},
            "classes": {
                "Tween": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "ClientSrc\\js\\util\\Util.js": {
            "name": "ClientSrc\\js\\util\\Util.js",
            "modules": {
                "Util": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "ClientSrc\\js\\view\\AlertMenuView.js": {
            "name": "ClientSrc\\js\\view\\AlertMenuView.js",
            "modules": {},
            "classes": {
                "view.AlertMenuView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            }
        },
        "ClientSrc\\js\\view\\BalloonView.js": {
            "name": "ClientSrc\\js\\view\\BalloonView.js",
            "modules": {},
            "classes": {
                "view.BalloonView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            }
        },
        "ClientSrc\\js\\view\\ConfirmationView.js": {
            "name": "ClientSrc\\js\\view\\ConfirmationView.js",
            "modules": {
                "ConfirmationView": 1
            },
            "classes": {
                "view.ConfirmationView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            }
        },
        "ClientSrc\\js\\view\\ContentLibraryView.js": {
            "name": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "view": 1
            }
        },
        "ClientSrc\\js\\view\\DesktopMenuView.js": {
            "name": "ClientSrc\\js\\view\\DesktopMenuView.js",
            "modules": {},
            "classes": {
                "view.DesktopMenuView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            }
        },
        "ClientSrc\\js\\view\\DesktopOptionsView.js": {
            "name": "ClientSrc\\js\\view\\DesktopOptionsView.js",
            "modules": {},
            "classes": {
                "view.DesktopOptionsView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            }
        },
        "ClientSrc\\js\\view\\DesktopView.js": {
            "name": "ClientSrc\\js\\view\\DesktopView.js",
            "modules": {},
            "classes": {
                "view.DesktopView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            }
        },
        "ClientSrc\\js\\view\\DevMenuView.js": {
            "name": "ClientSrc\\js\\view\\DevMenuView.js",
            "modules": {},
            "classes": {
                "view.DevMenuView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            }
        },
        "ClientSrc\\js\\view\\ExpirationView.js": {
            "name": "ClientSrc\\js\\view\\ExpirationView.js",
            "modules": {},
            "classes": {
                "view.ExpirationView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            }
        },
        "ClientSrc\\js\\view\\HelpMenuView.js": {
            "name": "ClientSrc\\js\\view\\HelpMenuView.js",
            "modules": {},
            "classes": {
                "view.HubHelpView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            }
        },
        "ClientSrc\\js\\view\\HtmlModalView.js": {
            "name": "ClientSrc\\js\\view\\HtmlModalView.js",
            "modules": {
                "HtmlModalView": 1
            },
            "classes": {
                "view.HtmlModalView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            }
        },
        "ClientSrc\\js\\view\\HubView.js": {
            "name": "ClientSrc\\js\\view\\HubView.js",
            "modules": {},
            "classes": {
                "view.HubView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            }
        },
        "ClientSrc\\js\\view\\IframeAppmodeView.js": {
            "name": "ClientSrc\\js\\view\\IframeAppmodeView.js",
            "modules": {
                "IframeAppmodeView": 1
            },
            "classes": {
                "view.IframeAppmodeView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            }
        },
        "ClientSrc\\js\\view\\IframeModalView.js": {
            "name": "ClientSrc\\js\\view\\IframeModalView.js",
            "modules": {
                "IframeModalView": 1
            },
            "classes": {
                "view.IframeModalView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            }
        },
        "ClientSrc\\js\\view\\ModalView.js": {
            "name": "ClientSrc\\js\\view\\ModalView.js",
            "modules": {},
            "classes": {
                "view.ModalView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            }
        },
        "ClientSrc\\js\\view\\NewsChannelListView.js": {
            "name": "ClientSrc\\js\\view\\NewsChannelListView.js",
            "modules": {},
            "classes": {
                "view.NewsChannelList": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            }
        },
        "ClientSrc\\js\\view\\NewsView.js": {
            "name": "ClientSrc\\js\\view\\NewsView.js",
            "modules": {},
            "classes": {
                "view.NewsView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            }
        },
        "ClientSrc\\js\\view\\SearchResultsView.js": {
            "name": "ClientSrc\\js\\view\\SearchResultsView.js",
            "modules": {},
            "classes": {
                "view.SearchResultsView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            }
        },
        "ClientSrc\\js\\view\\ToastView.js": {
            "name": "ClientSrc\\js\\view\\ToastView.js",
            "modules": {
                "ToastView": 1
            },
            "classes": {
                "view.ToastView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            }
        },
        "ClientSrc\\js\\view\\View.js": {
            "name": "ClientSrc\\js\\view\\View.js",
            "modules": {},
            "classes": {
                "view.View": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            }
        },
        "ClientSrc\\js\\view\\WalkthroughView.js": {
            "name": "ClientSrc\\js\\view\\WalkthroughView.js",
            "modules": {},
            "classes": {
                "view.WalkthroughView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            }
        },
        "ClientSrc\\js\\view\\WidgetAppmodeView.js": {
            "name": "ClientSrc\\js\\view\\WidgetAppmodeView.js",
            "modules": {
                "WidgetAppmodeView": 1
            },
            "classes": {
                "view.WidgetAppmodeView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            }
        },
        "ClientSrc\\js\\view\\WidgetView.js": {
            "name": "ClientSrc\\js\\view\\WidgetView.js",
            "modules": {},
            "classes": {
                "view.WidgetView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            }
        },
        "ClientSrc\\js\\router.js": {
            "name": "ClientSrc\\js\\router.js",
            "modules": {
                "App": 1,
                "HeatBeat": 1,
                "HeartBeat": 1,
                "Expiration": 1,
                "Metrics": 1
            },
            "classes": {
                "view.Router": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Ajax": {
            "name": "Ajax",
            "submodules": {},
            "elements": {},
            "classes": {
                "collection.AlertCollection": 1,
                "collection.BroadcastCollection": 1,
                "collection.Collection": 1,
                "collection.DesktopCollection": 1,
                "collection.LayoutCollection": 1,
                "collection.NewsArticleCollection": 1,
                "collection.NewsCollection": 1,
                "collection.ServiceCollection": 1,
                "collection.SizeCollection": 1,
                "collection.WidgetCollection": 1,
                "model.AlertModel": 1,
                "model.BroadcastModel": 1,
                "model.DesktopModel": 1,
                "model.HeartbeatModel": 1,
                "model.Model": 1,
                "model.NewsArticleModel": 1,
                "model.NewsChannelModel": 1,
                "model.SizeModel": 1,
                "model.UserModel": 1,
                "model.WidgetLayoutModel": 1,
                "model.WidgetModel": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "ClientSrc\\js\\model\\WidgetModel.js",
            "line": 22,
            "description": "jQuery.ajax wrapper to pass options and extend defaults. First created to add authorization header to all requests.",
            "params": [
                {
                    "name": "ajaxOptions",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "DesktopModel"
            }
        },
        "AnimHelpers": {
            "name": "AnimHelpers",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "util": 1
            },
            "tag": "module",
            "file": "ClientSrc\\js\\util\\AnimHelpers.js",
            "line": 8,
            "description": "Module containing generalized animation helpers",
            "access": "public",
            "tagname": "",
            "type": "Object"
        },
        "Messaging": {
            "name": "Messaging",
            "submodules": {},
            "elements": {},
            "classes": {
                "Tween": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "ClientSrc\\js\\util\\Tween.js",
            "line": 20,
            "description": "navigate a modal to ServiceNow and create an ESM ticket",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "access": "private",
            "tagname": ""
        },
        "Util": {
            "name": "Util",
            "submodules": {},
            "elements": {},
            "classes": {
                "view.AlertMenuView": 1,
                "view.BalloonView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            },
            "tag": "module",
            "file": "ClientSrc\\js\\view\\BalloonView.js",
            "line": 8,
            "description": "parses the url for a query parameters, return a key-value object of the arguments",
            "params": [
                {
                    "name": "url",
                    "description": "- url with possible query paramters",
                    "type": "String"
                }
            ],
            "return": {
                "description": "key-value object with parsed query parameters",
                "type": "Object"
            },
            "itemtype": "method",
            "access": "public",
            "tagname": ""
        },
        "ConfirmationView": {
            "name": "ConfirmationView",
            "submodules": {},
            "elements": {},
            "classes": {
                "view.ConfirmationView": 1,
                "view.DesktopMenuView": 1,
                "view.DesktopOptionsView": 1,
                "view.DesktopView": 1,
                "view.DevMenuView": 1,
                "view.ExpirationView": 1,
                "view.HubHelpView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            },
            "tag": "module",
            "file": "ClientSrc\\js\\view\\HelpMenuView.js",
            "line": 9,
            "description": "a simple modal-view to wrap confirmation dialog logic"
        },
        "HtmlModalView": {
            "name": "HtmlModalView",
            "submodules": {},
            "elements": {},
            "classes": {
                "view.HtmlModalView": 1,
                "view.HubView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            },
            "tag": "module",
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 36,
            "description": "A modal for those who those who want to display pre-built html"
        },
        "IframeAppmodeView": {
            "name": "IframeAppmodeView",
            "submodules": {},
            "elements": {},
            "classes": {
                "view.IframeAppmodeView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            },
            "tag": "module",
            "file": "ClientSrc\\js\\view\\IframeAppmodeView.js",
            "line": 8,
            "description": "a generic appmode for any iframe"
        },
        "IframeModalView": {
            "name": "IframeModalView",
            "submodules": {},
            "elements": {},
            "classes": {
                "view.IframeModalView": 1,
                "view.ModalView": 1,
                "view.NewsChannelList": 1,
                "view.NewsView": 1,
                "view.SearchResultsView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            },
            "tag": "module",
            "file": "ClientSrc\\js\\view\\SearchResultsView.js",
            "line": 8,
            "description": "a generic modal with an iframe"
        },
        "ToastView": {
            "name": "ToastView",
            "submodules": {},
            "elements": {},
            "classes": {
                "view.ToastView": 1,
                "view.View": 1,
                "view.WalkthroughView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            },
            "tag": "module",
            "file": "ClientSrc\\js\\view\\WalkthroughView.js",
            "line": 9,
            "description": "displays a simple toast-message"
        },
        "WidgetAppmodeView": {
            "name": "WidgetAppmodeView",
            "submodules": {},
            "elements": {},
            "classes": {
                "view.WidgetAppmodeView": 1,
                "view.WidgetView": 1
            },
            "fors": {},
            "namespaces": {
                "view": 1
            },
            "tag": "module",
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 9,
            "description": "Encapsulates all view logic for interacting with the AppMode template"
        },
        "App": {
            "name": "App",
            "submodules": {
                "HeatBeat": 1,
                "HeartBeat": 1,
                "Expiration": 1,
                "Metrics": 1
            },
            "elements": {},
            "classes": {
                "view.Router": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "ClientSrc\\js\\router.js",
            "line": 31,
            "description": "The router, or \"App\" is the heart of the entire application, it handles the hash-navigation,\nit composes the HubView, HubModel, UserModel, WidgetCollection, ServiceCollection\nThrough the App, a developer should be able to get to any model or view within the entire application\n\nYou can get the app at any time using: \"require('app')\"\neg: require(\"app\").WidgetCollection.where({Name: \"HubTV\"});\neg: require(\"app\").HubModel.get(\"Debug\");\neg: require(\"app\").HubView.getActiveDesktopModel().get(\"WidgetCollection\")\neg: require(\"app\").UserModel.get(\"BadgeNumber\")\neg: require(\"app\").HubView.getActiveDesktopModel().trigger(\"save\");"
        },
        "HeatBeat": {
            "name": "HeatBeat",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "App",
            "namespace": "",
            "file": "ClientSrc\\js\\router.js",
            "line": 439,
            "description": "sub-module for controlling the application's heartbeat\nThe heartbeat provides updates for client and server\nAlerts, News, maintenance flagging, etc...",
            "access": "public",
            "tagname": ""
        },
        "HeartBeat": {
            "name": "HeartBeat",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "App",
            "namespace": "",
            "file": "ClientSrc\\js\\router.js",
            "line": 449,
            "description": "determine if the TheHub is on maintence break",
            "params": [
                {
                    "name": "HeartbeatModel",
                    "description": "",
                    "type": "HeartbeatModel"
                }
            ],
            "return": {
                "description": "returns true if we don't need to process any more heartbeat actions",
                "type": "Boolean"
            },
            "itemtype": "method",
            "access": "private",
            "tagname": "",
            "type": "Integer"
        },
        "Expiration": {
            "name": "Expiration",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "App",
            "namespace": "",
            "file": "ClientSrc\\js\\router.js",
            "line": 667,
            "description": "sub-module controlling client-expiration",
            "access": "public",
            "tagname": "",
            "itemtype": "property",
            "type": "Integer"
        },
        "Metrics": {
            "name": "Metrics",
            "submodules": {},
            "elements": {},
            "classes": {
                "view.Router": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "App",
            "namespace": "",
            "file": "ClientSrc\\js\\router.js",
            "line": 31,
            "description": "sub-module for logging user metrics",
            "access": "public",
            "tagname": "",
            "itemtype": "method"
        }
    },
    "classes": {
        "collection.AlertCollection": {
            "name": "collection.AlertCollection",
            "shortname": "collection.AlertCollection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ajax",
            "namespace": "collection",
            "file": "ClientSrc\\js\\collection\\AlertCollection.js",
            "line": 8,
            "description": "AlertCollection contains the list of alert-models to be rendered/interacted with for the user",
            "is_constructor": 1,
            "extends": "Collection",
            "access": "public",
            "tagname": ""
        },
        "collection.BroadcastCollection": {
            "name": "collection.BroadcastCollection",
            "shortname": "collection.BroadcastCollection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ajax",
            "namespace": "collection",
            "file": "ClientSrc\\js\\collection\\BroadcastCollection.js",
            "line": 8,
            "description": "defines a list of broadcast messages",
            "is_constructor": 1,
            "extends": "Collection",
            "access": "public",
            "tagname": ""
        },
        "collection.Collection": {
            "name": "collection.Collection",
            "shortname": "collection.Collection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ajax",
            "namespace": "collection",
            "file": "ClientSrc\\js\\collection\\Collection.js",
            "line": 8,
            "description": "Provides a parent abstraction point to all collections\ncurrently not doing anything, but at least the option is available",
            "is_constructor": 1,
            "extends": "Backbone.Collection",
            "access": "public",
            "tagname": ""
        },
        "collection.DesktopCollection": {
            "name": "collection.DesktopCollection",
            "shortname": "collection.DesktopCollection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ajax",
            "namespace": "collection",
            "file": "ClientSrc\\js\\collection\\DesktopCollection.js",
            "line": 8,
            "description": "Provides a parent abstraction point to all collections",
            "is_constructor": 1,
            "extends": "Collection",
            "access": "public",
            "tagname": ""
        },
        "collection.LayoutCollection": {
            "name": "collection.LayoutCollection",
            "shortname": "collection.LayoutCollection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ajax",
            "namespace": "collection",
            "file": "ClientSrc\\js\\collection\\LayoutCollection.js",
            "line": 9,
            "description": "defines a list of profile layouts at different column widgets for widgets",
            "is_constructor": 1,
            "extends": "Collection",
            "access": "public",
            "tagname": ""
        },
        "collection.NewsArticleCollection": {
            "name": "collection.NewsArticleCollection",
            "shortname": "collection.NewsArticleCollection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ajax",
            "namespace": "collection",
            "file": "ClientSrc\\js\\collection\\NewsArticleCollection.js",
            "line": 8,
            "description": "defines a list of news articles, contained by a news channel",
            "is_constructor": 1,
            "extends": "Collection",
            "access": "public",
            "tagname": ""
        },
        "collection.NewsCollection": {
            "name": "collection.NewsCollection",
            "shortname": "collection.NewsCollection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ajax",
            "namespace": "collection",
            "file": "ClientSrc\\js\\collection\\NewsCollection.js",
            "line": 11,
            "description": "defines a list of channels, who owns a list of articles",
            "is_constructor": 1,
            "extends": "Collection",
            "access": "public",
            "tagname": ""
        },
        "collection.ServiceCollection": {
            "name": "collection.ServiceCollection",
            "shortname": "collection.ServiceCollection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ajax",
            "namespace": "collection",
            "file": "ClientSrc\\js\\collection\\ServiceCollection.js",
            "line": 8,
            "description": "defines a list of services available to the client",
            "is_constructor": 1,
            "extends": "Collection",
            "access": "public",
            "tagname": ""
        },
        "collection.SizeCollection": {
            "name": "collection.SizeCollection",
            "shortname": "collection.SizeCollection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ajax",
            "namespace": "collection",
            "file": "ClientSrc\\js\\collection\\SizeCollection.js",
            "line": 8,
            "description": "contains a list of sizes a widget can be set to",
            "is_constructor": 1,
            "extends": "Collection",
            "access": "public",
            "tagname": ""
        },
        "collection.WidgetCollection": {
            "name": "collection.WidgetCollection",
            "shortname": "collection.WidgetCollection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ajax",
            "namespace": "collection",
            "file": "ClientSrc\\js\\collection\\WidgetCollection.js",
            "line": 9,
            "description": "defines a collection of widgets which a desktop owns, or is available through the content library",
            "is_constructor": 1,
            "extends": "Collection",
            "access": "public",
            "tagname": ""
        },
        "model.AlertModel": {
            "name": "model.AlertModel",
            "shortname": "model.AlertModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ajax",
            "namespace": "model",
            "file": "ClientSrc\\js\\model\\AlertModel.js",
            "line": 8,
            "description": "defines all attributes for an alert",
            "is_constructor": 1,
            "extends": "Model",
            "access": "public",
            "tagname": ""
        },
        "model.BroadcastModel": {
            "name": "model.BroadcastModel",
            "shortname": "model.BroadcastModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ajax",
            "namespace": "model",
            "file": "ClientSrc\\js\\model\\BroadcastModel.js",
            "line": 8,
            "description": "all attributes for a broadcast message",
            "is_constructor": 1,
            "extends": "Model",
            "access": "public",
            "tagname": ""
        },
        "model.DesktopModel": {
            "name": "model.DesktopModel",
            "shortname": "model.DesktopModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ajax",
            "namespace": "model",
            "file": "ClientSrc\\js\\model\\DesktopModel.js",
            "line": 9,
            "description": "defines all attributes related to a desktop",
            "is_constructor": 1,
            "extends": "Model",
            "access": "public",
            "tagname": ""
        },
        "model.HeartbeatModel": {
            "name": "model.HeartbeatModel",
            "shortname": "model.HeartbeatModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ajax",
            "namespace": "model",
            "file": "ClientSrc\\js\\model\\HubModel.js",
            "line": 8,
            "description": "All attributes relating to TheHub as an application",
            "is_constructor": 1,
            "extends": "Model",
            "access": "public",
            "tagname": ""
        },
        "model.Model": {
            "name": "model.Model",
            "shortname": "model.Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ajax",
            "namespace": "model",
            "file": "ClientSrc\\js\\model\\Model.js",
            "line": 8,
            "description": "Extends Backbone.Model, and provides parent functionality common to all Models\n\nnot really used yet - but the option is here...",
            "is_constructor": 1,
            "extends": "Backbone.Model",
            "access": "public",
            "tagname": ""
        },
        "model.NewsArticleModel": {
            "name": "model.NewsArticleModel",
            "shortname": "model.NewsArticleModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ajax",
            "namespace": "model",
            "file": "ClientSrc\\js\\model\\NewsArticleModel.js",
            "line": 8,
            "description": "contains the attributes for a single news article",
            "is_constructor": 1,
            "extends": "Model",
            "access": "public",
            "tagname": ""
        },
        "model.NewsChannelModel": {
            "name": "model.NewsChannelModel",
            "shortname": "model.NewsChannelModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ajax",
            "namespace": "model",
            "file": "ClientSrc\\js\\model\\ServiceModel.js",
            "line": 8,
            "description": "contains all attributes for a service",
            "is_constructor": 1,
            "extends": "Model",
            "access": "public",
            "tagname": ""
        },
        "model.SizeModel": {
            "name": "model.SizeModel",
            "shortname": "model.SizeModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ajax",
            "namespace": "model",
            "file": "ClientSrc\\js\\model\\SizeModel.js",
            "line": 8,
            "description": "defines a size for a widget",
            "is_constructor": 1,
            "extends": "Model",
            "access": "public",
            "tagname": ""
        },
        "model.UserModel": {
            "name": "model.UserModel",
            "shortname": "model.UserModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ajax",
            "namespace": "model",
            "file": "ClientSrc\\js\\model\\UserModel.js",
            "line": 11,
            "description": "Extends Model, provides the data to a user",
            "is_constructor": 1,
            "extends": "Model",
            "access": "public",
            "tagname": ""
        },
        "model.WidgetLayoutModel": {
            "name": "model.WidgetLayoutModel",
            "shortname": "model.WidgetLayoutModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ajax",
            "namespace": "model",
            "file": "ClientSrc\\js\\model\\WidgetLayoutModel.js",
            "line": 8,
            "description": "defines the width/height/position of a widget at particular at column counts",
            "is_constructor": 1,
            "extends": "Model",
            "access": "public",
            "tagname": ""
        },
        "model.WidgetModel": {
            "name": "model.WidgetModel",
            "shortname": "model.WidgetModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Ajax",
            "namespace": "model",
            "file": "ClientSrc\\js\\model\\WidgetModel.js",
            "line": 22,
            "description": "Extends Model, and defines all information and flags used by a widget",
            "is_constructor": 1,
            "extends": "Model",
            "access": "public",
            "tagname": ""
        },
        "Tween": {
            "name": "Tween",
            "shortname": "Tween",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Messaging",
            "namespace": "",
            "file": "ClientSrc\\js\\util\\Tween.js",
            "line": 20,
            "description": "Interpolation helper controller",
            "params": [
                {
                    "name": "start",
                    "description": "- initial interpolation value",
                    "type": "Number"
                },
                {
                    "name": "stop",
                    "description": "- ending interpolation value",
                    "type": "Number"
                },
                {
                    "name": "duration",
                    "description": "- how long between start and stop values in millies",
                    "type": "Number"
                }
            ],
            "access": "public",
            "tagname": ""
        },
        "view.AlertMenuView": {
            "name": "view.AlertMenuView",
            "shortname": "view.AlertMenuView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Util",
            "namespace": "view",
            "file": "ClientSrc\\js\\view\\AlertMenuView.js",
            "line": 9,
            "description": "controls the UI containing alerts",
            "is_constructor": 1,
            "extends": "View",
            "access": "public",
            "tagname": ""
        },
        "view.BalloonView": {
            "name": "view.BalloonView",
            "shortname": "view.BalloonView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Util",
            "namespace": "view",
            "file": "ClientSrc\\js\\view\\BalloonView.js",
            "line": 8,
            "description": "creates a floating balloon at the argued location/orientation\n\nconstructor parameters:",
            "params": [
                {
                    "name": "x",
                    "description": "- absolute page position X axis",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- absolute page position Y axis,",
                    "type": "Number"
                },
                {
                    "name": "message",
                    "description": "- the balloon message to be displayed",
                    "type": "String"
                },
                {
                    "name": "orientation",
                    "description": "- \"top|bottom|left|right\"",
                    "type": "String"
                },
                {
                    "name": "title",
                    "description": "- (optional) a title to display inside the balloon",
                    "type": "String"
                },
                {
                    "name": "close",
                    "description": "- (optional) displays the close icon",
                    "type": "Boolean"
                },
                {
                    "name": "closeIconText",
                    "description": "- changes the 'X' close-icon to the text you argue",
                    "type": "String"
                },
                {
                    "name": "onClose",
                    "description": "- (optional) callback made when the balloon closes",
                    "type": "Function"
                }
            ],
            "extends": "View",
            "is_constructor": 1,
            "access": "public",
            "tagname": ""
        },
        "view.ConfirmationView": {
            "name": "view.ConfirmationView",
            "shortname": "view.ConfirmationView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ConfirmationView",
            "namespace": "view",
            "file": "ClientSrc\\js\\view\\ConfirmationView.js",
            "line": 8,
            "description": "a simple modal-view to wrap confirmation dialog logic",
            "is_constructor": 1,
            "extends": "ModalView",
            "access": "public",
            "tagname": ""
        },
        "view.DesktopMenuView": {
            "name": "view.DesktopMenuView",
            "shortname": "view.DesktopMenuView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ConfirmationView",
            "namespace": "view",
            "file": "ClientSrc\\js\\view\\DesktopMenuView.js",
            "line": 9,
            "description": "controls toggling desktops, creating new, sharing, etc...",
            "is_constructor": 1,
            "extends": "View",
            "access": "public",
            "tagname": ""
        },
        "view.DesktopOptionsView": {
            "name": "view.DesktopOptionsView",
            "shortname": "view.DesktopOptionsView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ConfirmationView",
            "namespace": "view",
            "file": "ClientSrc\\js\\view\\DesktopOptionsView.js",
            "line": 8,
            "description": "controls the menu for editing a desktop",
            "is_constructor": 1,
            "extends": "View",
            "access": "public",
            "tagname": ""
        },
        "view.DesktopView": {
            "name": "view.DesktopView",
            "shortname": "view.DesktopView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ConfirmationView",
            "namespace": "view",
            "file": "ClientSrc\\js\\view\\DesktopView.js",
            "line": 16,
            "description": "encapsultes all gridster-desktop logic",
            "is_constructor": 1,
            "extends": "View",
            "access": "public",
            "tagname": ""
        },
        "view.DevMenuView": {
            "name": "view.DevMenuView",
            "shortname": "view.DevMenuView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ConfirmationView",
            "namespace": "view",
            "file": "ClientSrc\\js\\view\\DevMenuView.js",
            "line": 8,
            "description": "quick methods for developers to force things",
            "is_constructor": 1,
            "extends": "View",
            "access": "public",
            "tagname": ""
        },
        "view.ExpirationView": {
            "name": "view.ExpirationView",
            "shortname": "view.ExpirationView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ConfirmationView",
            "namespace": "view",
            "file": "ClientSrc\\js\\view\\ExpirationView.js",
            "line": 8,
            "description": "controls the client-expiration UI",
            "extends": "View",
            "is_constructor": 1,
            "access": "public",
            "tagname": ""
        },
        "view.HubHelpView": {
            "name": "view.HubHelpView",
            "shortname": "view.HubHelpView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ConfirmationView",
            "namespace": "view",
            "file": "ClientSrc\\js\\view\\HelpMenuView.js",
            "line": 9,
            "description": "controls the view and events tied to the help menu",
            "is_constructor": 1,
            "extends": "View",
            "access": "public",
            "tagname": ""
        },
        "view.HtmlModalView": {
            "name": "view.HtmlModalView",
            "shortname": "view.HtmlModalView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "HtmlModalView",
            "namespace": "view",
            "file": "ClientSrc\\js\\view\\HtmlModalView.js",
            "line": 8,
            "description": "A modal for those who those who want to display pre-built html",
            "is_constructor": 1,
            "extends": "ModalView",
            "access": "public",
            "tagname": ""
        },
        "view.HubView": {
            "name": "view.HubView",
            "shortname": "view.HubView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "HtmlModalView",
            "namespace": "view",
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 36,
            "description": "HubView controls the top-most level of interaction with TheHub as an application,\nit also contains some helpful methods to get the current active desktop model/view",
            "is_constructor": 1,
            "extends": "View",
            "access": "public",
            "tagname": ""
        },
        "view.IframeAppmodeView": {
            "name": "view.IframeAppmodeView",
            "shortname": "view.IframeAppmodeView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "IframeAppmodeView",
            "namespace": "view",
            "file": "ClientSrc\\js\\view\\IframeAppmodeView.js",
            "line": 8,
            "description": "a generic appmode for any iframe",
            "is_constructor": 1,
            "extends": "View",
            "access": "public",
            "tagname": ""
        },
        "view.IframeModalView": {
            "name": "view.IframeModalView",
            "shortname": "view.IframeModalView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "IframeModalView",
            "namespace": "view",
            "file": "ClientSrc\\js\\view\\IframeModalView.js",
            "line": 8,
            "description": "a generic modal with an iframe",
            "is_constructor": 1,
            "extends": "ModalView",
            "access": "public",
            "tagname": ""
        },
        "view.ModalView": {
            "name": "view.ModalView",
            "shortname": "view.ModalView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "IframeModalView",
            "namespace": "view",
            "file": "ClientSrc\\js\\view\\ModalView.js",
            "line": 16,
            "description": "abstract view controlling the shared model logic",
            "is_constructor": 1,
            "extends": "View",
            "access": "public",
            "tagname": ""
        },
        "view.NewsChannelList": {
            "name": "view.NewsChannelList",
            "shortname": "view.NewsChannelList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "IframeModalView",
            "namespace": "view",
            "file": "ClientSrc\\js\\view\\NewsChannelListView.js",
            "line": 8,
            "description": "controls the logic of viewing a news channel",
            "is_constructor": 1,
            "extends": "View",
            "access": "public",
            "tagname": ""
        },
        "view.NewsView": {
            "name": "view.NewsView",
            "shortname": "view.NewsView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "IframeModalView",
            "namespace": "view",
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 15,
            "description": "controls all aspects of the news menu",
            "is_constructor": 1,
            "extends": "View",
            "access": "public",
            "tagname": ""
        },
        "view.SearchResultsView": {
            "name": "view.SearchResultsView",
            "shortname": "view.SearchResultsView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "IframeModalView",
            "namespace": "view",
            "file": "ClientSrc\\js\\view\\SearchResultsView.js",
            "line": 8,
            "description": "controls the search results from the navbar search input",
            "is_constructor": 1,
            "extends": "View",
            "access": "public",
            "tagname": ""
        },
        "view.ToastView": {
            "name": "view.ToastView",
            "shortname": "view.ToastView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ToastView",
            "namespace": "view",
            "file": "ClientSrc\\js\\view\\ToastView.js",
            "line": 8,
            "description": "displays a simple toast-message",
            "is_constructor": 1,
            "extends": "View",
            "access": "public",
            "tagname": ""
        },
        "view.View": {
            "name": "view.View",
            "shortname": "view.View",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ToastView",
            "namespace": "view",
            "file": "ClientSrc\\js\\view\\View.js",
            "line": 12,
            "description": "Extends Backbone.View, and provides parent functionality common for all views",
            "is_constructor": 1,
            "extends": "Backbone.View",
            "access": "public",
            "tagname": ""
        },
        "view.WalkthroughView": {
            "name": "view.WalkthroughView",
            "shortname": "view.WalkthroughView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ToastView",
            "namespace": "view",
            "file": "ClientSrc\\js\\view\\WalkthroughView.js",
            "line": 9,
            "description": "controls all aspects of the new-user walkthrough",
            "is_constructor": 1,
            "extends": "View",
            "access": "public",
            "tagname": ""
        },
        "view.WidgetAppmodeView": {
            "name": "view.WidgetAppmodeView",
            "shortname": "view.WidgetAppmodeView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "WidgetAppmodeView",
            "namespace": "view",
            "file": "ClientSrc\\js\\view\\WidgetAppmodeView.js",
            "line": 8,
            "description": "Encapsulates all view logic for interacting with the AppMode template",
            "is_constructor": 1,
            "extends": "View",
            "access": "public",
            "tagname": ""
        },
        "view.WidgetView": {
            "name": "view.WidgetView",
            "shortname": "view.WidgetView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "WidgetAppmodeView",
            "namespace": "view",
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 9,
            "description": "Extends View, and defines the functionality do display and interact with a widget",
            "is_constructor": 1,
            "extends": "View",
            "access": "public",
            "tagname": ""
        },
        "view.Router": {
            "name": "view.Router",
            "shortname": "Router",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "App",
            "namespace": "view",
            "file": "ClientSrc\\js\\router.js",
            "line": 31,
            "description": "The router, or \"App\" is the heart of the entire application, it handles the hash-navigation,\nit composes the HubView, HubModel, UserModel, WidgetCollection, ServiceCollection\nThrough the App, a developer should be able to get to any model or view within the entire application\n\nYou can get the app at any time using: \"require('app')\"\neg: require(\"app\").WidgetCollection.where({Name: \"HubTV\"});\neg: require(\"app\").HubModel.get(\"Debug\");\neg: require(\"app\").HubView.getActiveDesktopModel().get(\"WidgetCollection\")\neg: require(\"app\").UserModel.get(\"BadgeNumber\")\neg: require(\"app\").HubView.getActiveDesktopModel().trigger(\"save\");",
            "extends": "Backbone.Router",
            "access": "public",
            "tagname": "",
            "is_constructor": 1,
            "submodule": "Metrics"
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "ClientSrc\\js\\collection\\AlertCollection.js",
            "line": 19,
            "description": "defines what model this collection encapsulates",
            "itemtype": "property",
            "name": "model",
            "type": "AlertModel",
            "access": "protected",
            "tagname": "",
            "class": "collection.AlertCollection",
            "namespace": "collection"
        },
        {
            "file": "ClientSrc\\js\\collection\\AlertCollection.js",
            "line": 28,
            "description": "used in the heartbeat to post a list of alert ID's the client already knows about",
            "return": {
                "description": "",
                "type": "Array"
            },
            "itemtype": "method",
            "name": "getIdList",
            "access": "public",
            "tagname": "",
            "class": "collection.AlertCollection",
            "namespace": "collection"
        },
        {
            "file": "ClientSrc\\js\\collection\\BroadcastCollection.js",
            "line": 19,
            "description": "defines what model this collection encapsulates",
            "itemtype": "property",
            "name": "model",
            "type": "BroadcastModel",
            "access": "protected",
            "tagname": "",
            "class": "collection.BroadcastCollection",
            "namespace": "collection"
        },
        {
            "file": "ClientSrc\\js\\collection\\DesktopCollection.js",
            "line": 19,
            "description": "defines what model this collection encapsulates",
            "itemtype": "property",
            "name": "model",
            "type": "DesktopModel",
            "access": "protected",
            "tagname": "",
            "class": "collection.DesktopCollection",
            "namespace": "collection"
        },
        {
            "file": "ClientSrc\\js\\collection\\DesktopCollection.js",
            "line": 28,
            "description": "performs a simple error check, making sure there is an active desktop to initialize",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "collection.DesktopCollection",
            "namespace": "collection"
        },
        {
            "file": "ClientSrc\\js\\collection\\LayoutCollection.js",
            "line": 20,
            "description": "defines what model this collection encapsulates",
            "itemtype": "property",
            "name": "model",
            "type": "WidgetLayoutModel",
            "access": "protected",
            "tagname": "",
            "class": "collection.LayoutCollection",
            "namespace": "collection"
        },
        {
            "file": "ClientSrc\\js\\collection\\LayoutCollection.js",
            "line": 29,
            "description": "recursively gets the closest column profile looking downwards",
            "params": [
                {
                    "name": "columnCount",
                    "description": "",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "getNextLowest",
            "access": "private",
            "tagname": "",
            "class": "collection.LayoutCollection",
            "namespace": "collection"
        },
        {
            "file": "ClientSrc\\js\\collection\\NewsArticleCollection.js",
            "line": 19,
            "description": "defines what model this collection encapsulates",
            "itemtype": "property",
            "name": "model",
            "type": "NewsArticleModel",
            "access": "protected",
            "tagname": "",
            "class": "collection.NewsArticleCollection",
            "namespace": "collection"
        },
        {
            "file": "ClientSrc\\js\\collection\\NewsArticleCollection.js",
            "line": 28,
            "description": "auto-sort the articles on their time-stamp",
            "itemtype": "method",
            "name": "comparator",
            "access": "protected",
            "tagname": "",
            "class": "collection.NewsArticleCollection",
            "namespace": "collection"
        },
        {
            "file": "ClientSrc\\js\\collection\\NewsArticleCollection.js",
            "line": 38,
            "description": "search for articles - called from NewsView",
            "params": [
                {
                    "name": "query",
                    "description": "",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "query",
            "access": "public",
            "tagname": "",
            "class": "collection.NewsArticleCollection",
            "namespace": "collection"
        },
        {
            "file": "ClientSrc\\js\\collection\\NewsCollection.js",
            "line": 22,
            "description": "defines what model this collection encapsulates",
            "itemtype": "property",
            "name": "model",
            "type": "NewsChannelModel",
            "access": "protected",
            "tagname": "",
            "class": "collection.NewsCollection",
            "namespace": "collection"
        },
        {
            "file": "ClientSrc\\js\\collection\\NewsCollection.js",
            "line": 31,
            "description": "used by the heartbeat to get a list of article ID's that the client already knows about",
            "return": {
                "description": "",
                "type": "Array"
            },
            "itemtype": "method",
            "name": "getIdList",
            "access": "public",
            "tagname": "",
            "class": "collection.NewsCollection",
            "namespace": "collection"
        },
        {
            "file": "ClientSrc\\js\\collection\\ServiceCollection.js",
            "line": 19,
            "description": "defines what model this collection encapsulates",
            "itemtype": "property",
            "name": "model",
            "type": "ServiceModel",
            "access": "protected",
            "tagname": "",
            "class": "collection.ServiceCollection",
            "namespace": "collection"
        },
        {
            "file": "ClientSrc\\js\\collection\\ServiceCollection.js",
            "line": 28,
            "description": "search for all services which kind of match the query",
            "itemtype": "method",
            "name": "query",
            "type": "String",
            "access": "public",
            "tagname": "",
            "class": "collection.ServiceCollection",
            "namespace": "collection"
        },
        {
            "file": "ClientSrc\\js\\collection\\SizeCollection.js",
            "line": 19,
            "description": "defines what model this collection encapsulates",
            "itemtype": "property",
            "name": "model",
            "type": "SizeModel",
            "access": "protected",
            "tagname": "",
            "class": "collection.SizeCollection",
            "namespace": "collection"
        },
        {
            "file": "ClientSrc\\js\\collection\\WidgetCollection.js",
            "line": 20,
            "description": "defines what model this collection encapsulates",
            "itemtype": "property",
            "name": "model",
            "type": "WidgetModel",
            "access": "protected",
            "tagname": "",
            "class": "collection.WidgetCollection",
            "namespace": "collection"
        },
        {
            "file": "ClientSrc\\js\\collection\\WidgetCollection.js",
            "line": 29,
            "description": "adds a listener to re-evalulate all widget positions",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "collection.WidgetCollection",
            "namespace": "collection"
        },
        {
            "file": "ClientSrc\\js\\collection\\WidgetCollection.js",
            "line": 39,
            "description": "returns a trimmed down list of widget models, only containing data the server cares about\nto save the desktop who owns this collection",
            "return": {
                "description": "",
                "type": "Object[]"
            },
            "itemtype": "method",
            "name": "serialize",
            "access": "public",
            "tagname": "",
            "class": "collection.WidgetCollection",
            "namespace": "collection"
        },
        {
            "file": "ClientSrc\\js\\collection\\WidgetCollection.js",
            "line": 60,
            "description": "event handler to the \"evaluate-positions\" callback - iterates widgets and ensures their \nlayout data is accurate (since a change in 1 widget, can effect many widgets)",
            "itemtype": "method",
            "name": "onEvalulatePositions",
            "access": "private",
            "tagname": "",
            "class": "collection.WidgetCollection",
            "namespace": "collection"
        },
        {
            "file": "ClientSrc\\js\\collection\\WidgetCollection.js",
            "line": 93,
            "description": "search the widget collection for matching widgets",
            "params": [
                {
                    "name": "query",
                    "description": "- \"search\" string, looks through name and tags",
                    "type": "String"
                },
                {
                    "name": "buFilter",
                    "description": "- BU filter",
                    "type": "String"
                },
                {
                    "name": "roleFilter",
                    "description": "- Role filter",
                    "type": "Stirng"
                },
                {
                    "name": "sort",
                    "description": "- \"alpha\" or \"popularity\" sorting, defaults to \"alpha\"",
                    "type": "String"
                }
            ],
            "return": {
                "description": "- an array of widget models",
                "type": "WidgetModel[]"
            },
            "itemtype": "method",
            "name": "query",
            "access": "public",
            "tagname": "",
            "class": "collection.WidgetCollection",
            "namespace": "collection"
        },
        {
            "file": "ClientSrc\\js\\model\\AlertModel.js",
            "line": 19,
            "description": "defines default null-values for all model attributes",
            "return": {
                "description": "",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "defaults",
            "access": "protected",
            "tagname": "",
            "class": "model.AlertModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\AlertModel.js",
            "line": 40,
            "description": "make attribute modifications before anything uses this model",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "model.AlertModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\AlertModel.js",
            "line": 59,
            "description": "the status just changed, save the new status to the server",
            "itemtype": "method",
            "name": "onSaveStatus",
            "access": "private",
            "tagname": "",
            "class": "model.AlertModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\BroadcastModel.js",
            "line": 19,
            "description": "defines default null-values for all model attributes",
            "return": {
                "description": "",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "defaults",
            "access": "protected",
            "tagname": "",
            "class": "model.BroadcastModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\DesktopModel.js",
            "line": 20,
            "description": "defines default null-values for all model attributes",
            "return": {
                "description": "",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "defaults",
            "access": "protected",
            "tagname": "",
            "class": "model.DesktopModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\DesktopModel.js",
            "line": 42,
            "description": "initialize inner collection",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "model.DesktopModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\DesktopModel.js",
            "line": 62,
            "description": "inactive desktops during client boot-up does not recieve widget data (payload optimization)\nthese desktops will only load widgets when its time to switch to them",
            "params": [
                {
                    "name": "onComplete",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "loadWidgets",
            "access": "public",
            "tagname": "",
            "class": "model.DesktopModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\DesktopModel.js",
            "line": 87,
            "description": "this is used for saving - which is a trimmed down model with only the values the server cares about",
            "return": {
                "description": "",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "serialize",
            "access": "public",
            "tagname": "",
            "class": "model.DesktopModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\DesktopModel.js",
            "line": 103,
            "description": "overriden from backbone to forward save to Ajax.js and automate toast error messages",
            "params": [
                {
                    "name": "onComplete",
                    "description": "",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "save",
            "access": "protected",
            "tagname": "",
            "class": "model.DesktopModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\DesktopModel.js",
            "line": 133,
            "description": "event handler to the remove callback, \nremoves the widget server side, then saves the desktop (to persist the new widget positions)",
            "params": [
                {
                    "name": "widgetModel",
                    "description": "",
                    "type": "WidgetModel"
                }
            ],
            "itemtype": "method",
            "name": "onRemoveWidget",
            "access": "private",
            "tagname": "",
            "class": "model.DesktopModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\HeartbeatModel.js",
            "line": 20,
            "description": "defines default null-values for all model attributes",
            "return": {
                "description": "",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "defaults",
            "access": "protected",
            "tagname": "",
            "class": "model.HeartbeatModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\HeartbeatModel.js",
            "line": 38,
            "description": "initialize inner collections",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "model.HeartbeatModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\HubModel.js",
            "line": 19,
            "description": "defines default null-values for all model attributes",
            "return": {
                "description": "",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "defaults",
            "access": "protected",
            "tagname": "",
            "class": "model.HeartbeatModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\HubModel.js",
            "line": 46,
            "description": "HubModel validate - only called during the initial-startup process (so we don't have to be super-detailed here)\nthe string error message here is not placed on the UI, the user will be transferred to the fatal-error screen",
            "params": [
                {
                    "name": "params",
                    "description": "- temporary copy of the attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "- validation will be considered a failure if any truthy value is returned",
                "type": "String||undefined"
            },
            "itemtype": "method",
            "name": "validate",
            "access": "protected",
            "tagname": "",
            "class": "model.HeartbeatModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\NewsArticleModel.js",
            "line": 19,
            "description": "defines default null-values for all model attributes",
            "return": {
                "description": "",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "defaults",
            "access": "protected",
            "tagname": "",
            "class": "model.NewsArticleModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\NewsArticleModel.js",
            "line": 40,
            "description": "init save events",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "model.NewsArticleModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\NewsArticleModel.js",
            "line": 54,
            "description": "save the status of this articleModel",
            "params": [
                {
                    "name": "model",
                    "description": "(this)",
                    "type": "NewsArticleModel"
                },
                {
                    "name": "val",
                    "description": "",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "saveStatus",
            "access": "private",
            "tagname": "",
            "class": "model.NewsArticleModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\NewsChannelModel.js",
            "line": 19,
            "description": "defines default null-values for all model attributes",
            "return": {
                "description": "",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "defaults",
            "access": "protected",
            "tagname": "",
            "class": "model.NewsChannelModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\NewsChannelModel.js",
            "line": 41,
            "description": "initialize inner-collection",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "model.NewsChannelModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\NewsChannelModel.js",
            "line": 51,
            "description": "overriden JSON conversion to deal with inner collection",
            "itemtype": "method",
            "name": "toJSON",
            "access": "protected",
            "tagname": "",
            "class": "model.NewsChannelModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\ServiceModel.js",
            "line": 19,
            "description": "defines default null-values for all model attributes",
            "return": {
                "description": "",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "defaults",
            "access": "protected",
            "tagname": "",
            "class": "model.NewsChannelModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\ServiceModel.js",
            "line": 36,
            "description": "make attribute modifications before anything uses this model",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "model.NewsChannelModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\SizeModel.js",
            "line": 19,
            "description": "defines default null-values for all model attributes",
            "return": {
                "description": "",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "defaults",
            "access": "protected",
            "tagname": "",
            "class": "model.SizeModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\SizeModel.js",
            "line": 35,
            "description": "make attribute modifications before anything uses this model\n\nonly 0-checking here, happened in some strange edge-case which hasn't cropped again, safety first...",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "model.SizeModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\UserModel.js",
            "line": 22,
            "description": "defines default null-values for all model attributes",
            "return": {
                "description": "",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "defaults",
            "access": "protected",
            "tagname": "",
            "class": "model.UserModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\UserModel.js",
            "line": 49,
            "description": "init inner-collections and events",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "model.UserModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\UserModel.js",
            "line": 76,
            "description": "UserModel validate - only called during the initial-startup process (so we don't have to be super-detailed here)\nthe string error message here is not placed on the UI, the user will be transferred to the fatal-error screen",
            "params": [
                {
                    "name": "params",
                    "description": "- temporary copy of the attributes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "- validation will be considered a failure if any truthy value is returned",
                "type": "String||undefined"
            },
            "itemtype": "method",
            "name": "validate",
            "access": "protected",
            "tagname": "",
            "class": "model.UserModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\UserModel.js",
            "line": 93,
            "description": "add custom events which bubble-up to UserModel for others to listen",
            "params": [
                {
                    "name": "desktopCollection",
                    "description": "",
                    "type": "DesktopCollection"
                }
            ],
            "itemtype": "method",
            "name": "addDesktopEvents",
            "access": "private",
            "tagname": "",
            "class": "model.UserModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\WidgetLayoutModel.js",
            "line": 19,
            "description": "defines default null-values for all model attributes",
            "return": {
                "description": "",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "defaults",
            "access": "protected",
            "tagname": "",
            "class": "model.WidgetLayoutModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\WidgetModel.js",
            "line": 33,
            "description": "defines default null-values for all model attributes",
            "return": {
                "description": "",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "defaults",
            "access": "protected",
            "tagname": "",
            "class": "model.WidgetModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\WidgetModel.js",
            "line": 79,
            "description": "convert arrays into backbone collections",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "model.WidgetModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\WidgetModel.js",
            "line": 130,
            "description": "validate model attributes on change events\nnote: the string messages here are not for the UI, only console.",
            "params": [
                {
                    "name": "attributes",
                    "description": "- temporary un-set attributes for validation",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "validate",
            "access": "protected",
            "tagname": "",
            "class": "model.WidgetModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\WidgetModel.js",
            "line": 153,
            "description": "retrieve the instance configuration associated with this widget model",
            "params": [
                {
                    "name": "onComplete",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "getInstanceConfig",
            "access": "protected",
            "tagname": "",
            "class": "model.WidgetModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\WidgetModel.js",
            "line": 179,
            "description": "save an updated configuration",
            "params": [
                {
                    "name": "Configuration",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "onComplete",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "setInstanceConfig",
            "access": "protected",
            "tagname": "",
            "class": "model.WidgetModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\WidgetModel.js",
            "line": 204,
            "description": "get the configuration associated with all widgets of this type for the user",
            "params": [
                {
                    "name": "onComplete",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "getGlobalConfig",
            "access": "protected",
            "tagname": "",
            "class": "model.WidgetModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\WidgetModel.js",
            "line": 228,
            "description": "set the configuration associated with all widgets of this type for the user",
            "params": [
                {
                    "name": "Configuration",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "onComplete",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "getGlobalConfig",
            "access": "protected",
            "tagname": "",
            "class": "model.WidgetModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\WidgetModel.js",
            "line": 249,
            "description": "constructs the widget url used for a external widget",
            "params": [
                {
                    "name": "layoutModel",
                    "description": "- the model representing this widget's current layout on the desktop",
                    "type": "LayoutModel"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "itemtype": "method",
            "name": "getWidgetUrl",
            "access": "public",
            "tagname": "",
            "class": "model.WidgetModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\WidgetModel.js",
            "line": 282,
            "description": "constructs the configuration url used for a external widget",
            "params": [
                {
                    "name": "layoutModel",
                    "description": "- the model representing this widget's current layout on the desktop",
                    "type": "LayoutModel"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "itemtype": "method",
            "name": "getConfigUrl",
            "access": "public",
            "tagname": "",
            "class": "model.WidgetModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\WidgetModel.js",
            "line": 314,
            "description": "constructs the appmode url used for a external widget",
            "params": [
                {
                    "name": "layoutModel",
                    "description": "- the model representing this widget's current layout on the desktop",
                    "type": "LayoutModel"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "itemtype": "method",
            "name": "getAppmodeUrl",
            "access": "public",
            "tagname": "",
            "class": "model.WidgetModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\WidgetModel.js",
            "line": 367,
            "description": "build the help wiki url",
            "return": {
                "description": "",
                "type": "String"
            },
            "itemtype": "method",
            "name": "getHelpUrl",
            "access": "public",
            "tagname": "",
            "class": "model.WidgetModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\WidgetModel.js",
            "line": 385,
            "description": "overriden clone method to deal with inner-collections / inner-models",
            "return": {
                "description": "",
                "type": "WidgetModel"
            },
            "itemtype": "method",
            "name": "clone",
            "access": "public",
            "tagname": "",
            "class": "model.WidgetModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\WidgetModel.js",
            "line": 409,
            "description": "set a new instance guid to this model - will throw warnings if there is already an instance guid set\n\nNote: AVERT YOUR GAZE! THIS CODE WAS TAKEN FROM THE ORIGINAL OUTSYSTEMS IMPLEMENTATION!",
            "itemtype": "method",
            "name": "generateGuid",
            "access": "public",
            "tagname": "",
            "class": "model.WidgetModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\WidgetModel.js",
            "line": 435,
            "description": "generates a new config number, outsystems will then not use the cached config",
            "itemtype": "method",
            "name": "bustConfigCache",
            "access": "public",
            "tagname": "",
            "class": "model.WidgetModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\WidgetModel.js",
            "line": 445,
            "description": "get the layout for the argued columnWidth",
            "params": [
                {
                    "name": "columnWidth",
                    "description": "- gridster column count",
                    "type": "Number"
                },
                {
                    "name": "previousSize",
                    "description": "- the previous column count, or null",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "WidgetLayoutModel"
            },
            "itemtype": "method",
            "name": "getLayout",
            "access": "public",
            "tagname": "",
            "class": "model.WidgetModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\WidgetModel.js",
            "line": 491,
            "description": "generate a new layout for this widget, guess the best possible location among the other widgets",
            "params": [
                {
                    "name": "columnWidth",
                    "description": "- column width",
                    "type": "Number"
                },
                {
                    "name": "previous",
                    "description": "- previous column width",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "WidgetLayout"
            },
            "itemtype": "method",
            "name": "makeNewLayout",
            "access": "private",
            "tagname": "",
            "class": "model.WidgetModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\model\\WidgetModel.js",
            "line": 533,
            "description": "trim down this widget's attributes to only what's needed to persist",
            "itemtype": "method",
            "name": "serialize",
            "access": "public",
            "tagname": "",
            "class": "model.WidgetModel",
            "namespace": "model"
        },
        {
            "file": "ClientSrc\\js\\util\\Ajax.js",
            "line": 92,
            "description": "download all of the plugin icons (the only way to get this with outsystems is as HEX)",
            "params": [
                {
                    "name": "onComplete",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "GetPluginStylesheet",
            "access": "public",
            "tagname": "",
            "class": "Tween",
            "module": "Ajax"
        },
        {
            "file": "ClientSrc\\js\\util\\Ajax.js",
            "line": 991,
            "description": "get a shared desktop that does not belong to the user (is not in UserModel.DesktopCollection)\nthis is called when a user navigates to a shared desktop, without adding to favorites",
            "params": [
                {
                    "name": "desktopId",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "onComplete",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "GetSharedDesktop",
            "access": "public",
            "tagname": "",
            "class": "Tween",
            "module": "Ajax"
        },
        {
            "file": "ClientSrc\\js\\util\\Ajax.js",
            "line": 1019,
            "description": "Gets the widget collection for the argued desktop",
            "params": [
                {
                    "name": "desktopId",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "onComplete",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "GetWidgetCollection",
            "access": "public",
            "tagname": "",
            "class": "Tween",
            "module": "Ajax"
        },
        {
            "file": "ClientSrc\\js\\util\\AnimHelpers.js",
            "line": 18,
            "description": "animates the argued element 'in'\nopacity from 0 to 1\nscale from 1.2 to 1",
            "params": [
                {
                    "name": "$el",
                    "description": "- the element to animate in",
                    "type": "JQuery"
                },
                {
                    "name": "cb",
                    "description": "- on complete callback",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "FadeScaleIn",
            "access": "public",
            "tagname": "",
            "class": "Tween",
            "module": "AnimHelpers",
            "namespace": "util"
        },
        {
            "file": "ClientSrc\\js\\util\\AnimHelpers.js",
            "line": 38,
            "description": "animates the argued element 'in', specific for modal\nopacity from 0 to 1\nscale from 1.2 to 1",
            "params": [
                {
                    "name": "$el",
                    "description": "- the element to animate in",
                    "type": "JQuery"
                },
                {
                    "name": "cb",
                    "description": "- on complete callback",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "FadeScaleIn",
            "access": "public",
            "tagname": "",
            "class": "Tween",
            "module": "AnimHelpers",
            "namespace": "util"
        },
        {
            "file": "ClientSrc\\js\\util\\AnimHelpers.js",
            "line": 61,
            "description": "animates the argued element 'out'\nopacity from 1 to 0\nscale from 1 to 1.2",
            "params": [
                {
                    "name": "$el",
                    "description": "- the element to animate out",
                    "type": "JQuery"
                },
                {
                    "name": "cb",
                    "description": "- on complete callback",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "FadeScaleOut",
            "access": "public",
            "tagname": "",
            "class": "Tween",
            "module": "AnimHelpers",
            "namespace": "util"
        },
        {
            "file": "ClientSrc\\js\\util\\AnimHelpers.js",
            "line": 81,
            "description": "animates the argued element 'out', specific for modal\nopacity from 1 to 0\nscale from 1 to 1.2",
            "params": [
                {
                    "name": "$el",
                    "description": "- the element to animate out",
                    "type": "JQuery"
                },
                {
                    "name": "cb",
                    "description": "- on complete callback",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "FadeScaleOut",
            "access": "public",
            "tagname": "",
            "class": "Tween",
            "module": "AnimHelpers",
            "namespace": "util"
        },
        {
            "file": "ClientSrc\\js\\util\\AnimHelpers.js",
            "line": 103,
            "description": "animates the loading page out, assumes it is currently visible",
            "params": [
                {
                    "name": "cb",
                    "description": "- on complete callback",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "LoadingPageOut",
            "access": "public",
            "tagname": "",
            "class": "Tween",
            "module": "AnimHelpers",
            "namespace": "util"
        },
        {
            "file": "ClientSrc\\js\\util\\AnimHelpers.js",
            "line": 132,
            "description": "shakes an element",
            "params": [
                {
                    "name": "$el",
                    "description": "",
                    "type": "JQuery"
                },
                {
                    "name": "cb",
                    "description": "- on complete callback",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "Shake",
            "access": "public",
            "tagname": "",
            "class": "Tween",
            "module": "AnimHelpers",
            "namespace": "util"
        },
        {
            "file": "ClientSrc\\js\\util\\Messaging.js",
            "line": 587,
            "description": "entry point to process all window messages",
            "itemtype": "method",
            "name": "processMessage",
            "access": "private",
            "tagname": "",
            "class": "Tween",
            "module": "Messaging"
        },
        {
            "file": "ClientSrc\\js\\util\\Tween.js",
            "line": 41,
            "description": "optionally set the context for the callbacks, (this pointer)",
            "params": [
                {
                    "name": "context",
                    "description": "- what 'this' will point to in the callbacks",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "itemtype": "method",
            "name": "context",
            "type": "Set/get",
            "access": "public",
            "tagname": "",
            "class": "Tween",
            "module": "Messaging"
        },
        {
            "file": "ClientSrc\\js\\util\\Tween.js",
            "line": 59,
            "description": "callback made on every step of interpolation",
            "params": [
                {
                    "name": "onStep",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "onStep",
                "type": "Function"
            },
            "itemtype": "method",
            "name": "onStep",
            "type": "Set/get",
            "access": "public",
            "tagname": "",
            "class": "Tween",
            "module": "Messaging"
        },
        {
            "file": "ClientSrc\\js\\util\\Tween.js",
            "line": 77,
            "description": "callback made on when interpolation completes",
            "params": [
                {
                    "name": "onComplete",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "onComplete",
                "type": "Function"
            },
            "itemtype": "method",
            "name": "onComplete",
            "type": "Set/get",
            "access": "public",
            "tagname": "",
            "class": "Tween",
            "module": "Messaging"
        },
        {
            "file": "ClientSrc\\js\\util\\Tween.js",
            "line": 95,
            "description": "predicate to override interpolation method, defaults to ease-in",
            "params": [
                {
                    "name": "interpolation",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "interpolation",
                "type": "Function"
            },
            "itemtype": "method",
            "name": "interpolation",
            "type": "Set/get",
            "access": "public",
            "tagname": "",
            "class": "Tween",
            "module": "Messaging"
        },
        {
            "file": "ClientSrc\\js\\util\\Tween.js",
            "line": 113,
            "description": "start interpolation",
            "itemtype": "method",
            "name": "start",
            "access": "public",
            "tagname": "",
            "class": "Tween",
            "module": "Messaging"
        },
        {
            "file": "ClientSrc\\js\\util\\Tween.js",
            "line": 134,
            "description": "stop value interpolation",
            "itemtype": "method",
            "name": "stop",
            "access": "public",
            "tagname": "",
            "class": "Tween",
            "module": "Messaging"
        },
        {
            "file": "ClientSrc\\js\\util\\Tween.js",
            "line": 149,
            "description": "run interpolation logic",
            "params": [
                {
                    "name": "tween",
                    "description": "- the Tween object to interpolate",
                    "type": "Tween"
                }
            ],
            "return": {
                "description": "true: interpolation is complete",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "updateTween",
            "access": "private",
            "tagname": "",
            "class": "Tween",
            "module": "Messaging"
        },
        {
            "file": "ClientSrc\\js\\util\\Util.js",
            "line": 237,
            "description": "notify to the user to allow popups from this site",
            "itemtype": "method",
            "name": "NotifyPopupBlocker",
            "access": "public",
            "tagname": "",
            "class": "view.AlertMenuView",
            "module": "Util"
        },
        {
            "file": "ClientSrc\\js\\util\\Util.js",
            "line": 261,
            "description": "determine if the argued thing is an array",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "IsArray",
            "access": "public",
            "tagname": "",
            "class": "view.AlertMenuView",
            "module": "Util"
        },
        {
            "file": "ClientSrc\\js\\util\\Util.js",
            "line": 274,
            "description": "determine if the argued thing is an object",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "IsObject",
            "access": "public",
            "tagname": "",
            "class": "view.AlertMenuView",
            "module": "Util"
        },
        {
            "file": "ClientSrc\\js\\util\\Util.js",
            "line": 287,
            "description": "convert the server timestamp timezone into users local timezone",
            "params": [
                {
                    "name": "Number",
                    "description": "",
                    "type": "UtcDateTime"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "itemtype": "method",
            "name": "ToUserTimezone",
            "access": "public",
            "tagname": "",
            "class": "view.AlertMenuView",
            "module": "Util"
        },
        {
            "file": "ClientSrc\\js\\view\\AlertMenuView.js",
            "line": 20,
            "description": "defines all events interacting with this view's DOM element",
            "itemtype": "property",
            "name": "events",
            "readonly": "",
            "access": "protected",
            "tagname": "",
            "type": "Object",
            "class": "view.AlertMenuView",
            "module": "Util",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\AlertMenuView.js",
            "line": 36,
            "description": "init template and handlers",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "view.AlertMenuView",
            "module": "Util",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\AlertMenuView.js",
            "line": 66,
            "description": "render an alert model to the menu",
            "params": [
                {
                    "name": "alertModel",
                    "description": "",
                    "type": "AlertModel"
                },
                {
                    "name": "$target",
                    "description": "",
                    "type": "JQuery"
                }
            ],
            "itemtype": "method",
            "name": "renderItem",
            "access": "private",
            "tagname": "",
            "class": "view.AlertMenuView",
            "module": "Util",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\AlertMenuView.js",
            "line": 107,
            "description": "internally called to update the count of new alerts on the navbar",
            "itemtype": "method",
            "name": "updateCount",
            "access": "private",
            "tagname": "",
            "class": "view.AlertMenuView",
            "module": "Util",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\AlertMenuView.js",
            "line": 121,
            "description": "called from the hub view to display the help menu",
            "params": [
                {
                    "name": "cb",
                    "description": "- callbacks to hubView to remove the global \"hide\" click handler",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "show",
            "access": "public",
            "tagname": "",
            "class": "view.AlertMenuView",
            "module": "Util",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\AlertMenuView.js",
            "line": 154,
            "description": "collection callback when a new alert is added",
            "itemtype": "method",
            "name": "addAlert",
            "access": "private",
            "tagname": "",
            "class": "view.AlertMenuView",
            "module": "Util",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\AlertMenuView.js",
            "line": 165,
            "description": "collection callback when an alert is removed",
            "params": [
                {
                    "name": "alertModel",
                    "description": "",
                    "type": "AlertModel"
                }
            ],
            "itemtype": "method",
            "name": "onRemoveAlert",
            "access": "private",
            "tagname": "",
            "class": "view.AlertMenuView",
            "module": "Util",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\AlertMenuView.js",
            "line": 181,
            "description": "renderes the empty-alerts message when there are no alerts in the collection",
            "itemtype": "method",
            "name": "renderEmptyMessage",
            "access": "private",
            "tagname": "",
            "class": "view.AlertMenuView",
            "module": "Util",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\AlertMenuView.js",
            "line": 194,
            "description": "user clicked on the subscription link",
            "itemtype": "method",
            "name": "onSubscriptions",
            "access": "private",
            "tagname": "",
            "class": "view.AlertMenuView",
            "module": "Util",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\AlertMenuView.js",
            "line": 212,
            "description": "user clicked the view all link",
            "itemtype": "method",
            "name": "onViewAll",
            "access": "private",
            "tagname": "",
            "class": "view.AlertMenuView",
            "module": "Util",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\AlertMenuView.js",
            "line": 230,
            "description": "user clicked an alert title\n(this will not fire if there is no url on the alert model)",
            "itemtype": "method",
            "name": "onViewAlert",
            "access": "private",
            "tagname": "",
            "class": "view.AlertMenuView",
            "module": "Util",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\AlertMenuView.js",
            "line": 280,
            "description": "user dismissed an alert",
            "itemtype": "method",
            "name": "onDismiss",
            "access": "private",
            "tagname": "",
            "class": "view.AlertMenuView",
            "module": "Util",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\AlertMenuView.js",
            "line": 320,
            "description": "user clicked the clear alerts link",
            "itemtype": "method",
            "name": "onClearAlerts",
            "access": "private",
            "tagname": "",
            "class": "view.AlertMenuView",
            "module": "Util",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\BalloonView.js",
            "line": 34,
            "description": "create the DOM",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "view.BalloonView",
            "module": "Util",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\BalloonView.js",
            "line": 78,
            "description": "assign position, dynamically based on orientation and argued position",
            "params": [
                {
                    "name": "x",
                    "description": "- aboslute X axis",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- absolute Y axis",
                    "type": "Number"
                },
                {
                    "name": "orientation",
                    "description": "- \"left|top|right|bottom\"",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "positionAndRender",
            "access": "private",
            "tagname": "",
            "class": "view.BalloonView",
            "module": "Util",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\BalloonView.js",
            "line": 136,
            "description": "defines the bubble animation class used with different orientations",
            "itemtype": "property",
            "name": "bubbleClass",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "view.BalloonView",
            "module": "Util",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\BalloonView.js",
            "line": 150,
            "description": "defines the bubble-out animation class used with different orientations",
            "itemtype": "property",
            "name": "antiBubbleClass",
            "type": "{Object}",
            "access": "private",
            "tagname": "",
            "class": "view.BalloonView",
            "module": "Util",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\BalloonView.js",
            "line": 164,
            "description": "animate the balloon out, optional callback when complete",
            "itemtype": "method",
            "name": "clear",
            "access": "public",
            "tagname": "",
            "class": "view.BalloonView",
            "module": "Util",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ConfirmationView.js",
            "line": 20,
            "description": "init dom and events",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "view.ConfirmationView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 12,
            "description": "defines all events interacting with this view's DOM element",
            "itemtype": "property",
            "name": "events",
            "readonly": "",
            "access": "protected",
            "tagname": "",
            "type": "Object",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 35,
            "description": "init dom and events",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 79,
            "description": "add unique options and populate the BU list",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Array"
                }
            ],
            "itemtype": "method",
            "name": "populateBUList",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 109,
            "description": "add unique options and populate the Role list",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Array"
                }
            ],
            "itemtype": "method",
            "name": "populateRoleList",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 139,
            "description": "populate the list of widgets onto the DOM",
            "itemtype": "method",
            "name": "populateWidgetList",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 184,
            "description": "iterates the active desktop model and applies 'on-desktop' indicators to library widgets",
            "itemtype": "method",
            "name": "evaluateOnDesktop",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 202,
            "description": "used to toggle the animated line for the first time \n(because dimensions are unknown until it's visible)",
            "itemtype": "property",
            "name": "_firstShow",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 211,
            "description": "used to block excessive sorting clicks",
            "itemtype": "property",
            "name": "_currentSort",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 219,
            "description": "user clicked the alpha-sorting button",
            "itemtype": "method",
            "name": "onAlphaSort",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 264,
            "description": "sort and re-order the widget elements alphabetically",
            "itemtype": "method",
            "name": "sortByAlpha",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 277,
            "description": "user clicked the popularity-sorting button",
            "itemtype": "method",
            "name": "onPopularitySort",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 322,
            "description": "sort and re-order the widget elements based on popularity",
            "itemtype": "method",
            "name": "sortByPopularity",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 335,
            "description": "called by the sorting methods - reorders the widgets in the given order",
            "params": [
                {
                    "name": "widgetList",
                    "description": "",
                    "type": "WidgetModel[]"
                }
            ],
            "itemtype": "method",
            "name": "reorderWidgets",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 356,
            "description": "retrieve the value for BU filter, taking \"all\" and \"my\" into account",
            "return": {
                "description": "",
                "type": "String"
            },
            "itemtype": "method",
            "name": "getCurrentBUFilter",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 376,
            "description": "retrieve the value for Role filter, taking \"all\" and \"my\" into account",
            "return": {
                "description": "",
                "type": "String"
            },
            "itemtype": "method",
            "name": "getCurrentRoleFilter",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 396,
            "description": "user typed a new value in the search field",
            "itemtype": "method",
            "name": "onSearch",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 410,
            "description": "user changed the BU filter",
            "itemtype": "method",
            "name": "onBUFilter",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 426,
            "description": "user changed the Role filter",
            "itemtype": "method",
            "name": "onRoleFilter",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 442,
            "description": "after a search query or filter changes, this will be called to show/hide matching widgets",
            "params": [
                {
                    "name": "matches",
                    "description": "",
                    "type": "WidgetModel[]"
                }
            ],
            "itemtype": "method",
            "name": "showWidgets",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 457,
            "description": "add the widget to the desktop",
            "itemtype": "method",
            "name": "onAddWidget",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 477,
            "description": "open the widget in appmode",
            "itemtype": "method",
            "name": "onAppmode",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 511,
            "description": "open the widget's help wiki",
            "itemtype": "method",
            "name": "onHelp",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 535,
            "description": "user clicked the access controls icon",
            "itemtype": "method",
            "name": "onAccessControls",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 553,
            "description": "internally used to block excessive show/hide calls",
            "itemtype": "property",
            "name": "isVisible",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 562,
            "description": "cached reference to the desktop-cover",
            "itemtype": "property",
            "name": "_$backdrop",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 570,
            "description": "animate the Content Library in",
            "params": [
                {
                    "name": "cb",
                    "description": "- optional on-complete callback",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "onShow",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 612,
            "description": "animate the Content Library out",
            "params": [
                {
                    "name": "cb",
                    "description": "- optional on-complete callback",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "onHide",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ContentLibraryView.js",
            "line": 655,
            "description": "user just focused the search box - only log the metric",
            "itemtype": "method",
            "name": "onSearchFocus",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopMenuView.js",
            "line": 20,
            "description": "defines all events interacting with this view's DOM element",
            "itemtype": "property",
            "name": "events",
            "readonly": "",
            "access": "protected",
            "tagname": "",
            "type": "Object",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopMenuView.js",
            "line": 35,
            "description": "init DOM and events",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopMenuView.js",
            "line": 70,
            "description": "request for the most up-to-date list of desktops, and re-render the menu",
            "itemtype": "method",
            "name": "refreshMenu",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopMenuView.js",
            "line": 95,
            "description": "collection callback when a desktop is removed",
            "params": [
                {
                    "name": "desktopModel",
                    "description": "",
                    "type": "DesktopModel"
                }
            ],
            "itemtype": "method",
            "name": "onRemoveDesktop",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopMenuView.js",
            "line": 110,
            "description": "model callback when a desktop.IsActive changes",
            "params": [
                {
                    "name": "desktop",
                    "description": "Model",
                    "type": "DesktopModel"
                }
            ],
            "itemtype": "method",
            "name": "onActiveChange",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopMenuView.js",
            "line": 142,
            "description": "model callback when desktop.Name changes",
            "params": [
                {
                    "name": "desktopModel",
                    "description": "",
                    "type": "DesktopModel"
                },
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "onNameChange",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopMenuView.js",
            "line": 160,
            "description": "populate the user's desktop menu",
            "itemtype": "method",
            "name": "initDesktopMenu",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopMenuView.js",
            "line": 201,
            "description": "when the desktop collection changes, re-render the menu",
            "itemtype": "method",
            "name": "reInitDesktopMenu",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopMenuView.js",
            "line": 227,
            "description": "called from the hub view to display the help menu",
            "params": [
                {
                    "name": "cb",
                    "description": "- callbacks to hubView to remove the global \"hide\" click handler",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "show",
            "access": "public",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopMenuView.js",
            "line": 266,
            "description": "user clicked the 'switch desktop' link",
            "itemtype": "method",
            "name": "onSwitchDesktop",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopMenuView.js",
            "line": 294,
            "description": "user clicked \"create a new desktop\"",
            "itemtype": "method",
            "name": "createDesktop",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopMenuView.js",
            "line": 374,
            "description": "user clicked the desktop options icon",
            "itemtype": "method",
            "name": "onDesktopOptions",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopMenuView.js",
            "line": 405,
            "description": "user wants to view all of the shared desktops",
            "itemtype": "method",
            "name": "onViewShared",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopOptionsView.js",
            "line": 19,
            "description": "defines all events interacting with this view's DOM element",
            "itemtype": "property",
            "name": "events",
            "readonly": "",
            "access": "protected",
            "tagname": "",
            "type": "Object",
            "class": "view.DesktopOptionsView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopOptionsView.js",
            "line": 34,
            "description": "init dom and events",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "view.DesktopOptionsView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopOptionsView.js",
            "line": 63,
            "description": "user clicked rename",
            "itemtype": "method",
            "name": "onRename",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopOptionsView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopOptionsView.js",
            "line": 127,
            "description": "user clicked delete",
            "itemtype": "method",
            "name": "onDelete",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopOptionsView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopOptionsView.js",
            "line": 172,
            "description": "callback from delete-desktop ajax request",
            "params": [
                {
                    "name": "success",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "itemtype": "method",
            "name": "deleteCallback",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopOptionsView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopOptionsView.js",
            "line": 203,
            "description": "user clicked share",
            "itemtype": "method",
            "name": "onShare",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopOptionsView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopOptionsView.js",
            "line": 237,
            "description": "user clicked the clone icon",
            "itemtype": "method",
            "name": "onClone",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopOptionsView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopView.js",
            "line": 27,
            "description": "main initialization of gridster and the desktop",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "view.DesktopView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopView.js",
            "line": 55,
            "description": "do \"math\" and determine how many columns we can fit",
            "params": [
                {
                    "name": "hubModel",
                    "description": "- (optional) the application's model",
                    "type": "HubModel"
                }
            ],
            "return": {
                "description": "- the number of columns that can current fit the window",
                "type": "Number"
            },
            "itemtype": "method",
            "name": "_getColumnCount",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopView.js",
            "line": 69,
            "description": "initialize the desktop-gridster",
            "itemtype": "method",
            "name": "initGridster",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopView.js",
            "line": 112,
            "description": "event-handler when model.IsActive changes in value",
            "params": [
                {
                    "name": "model",
                    "description": "",
                    "type": "DesktopModel"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "params",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "onToggleActive",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopView.js",
            "line": 133,
            "description": "initialize the existing widgets. if widgets are found with no layout data,\nit was a temporary widget and should be removed. This happens when launching\ndirectly into appmode, or following a deeplink.\n\nif the desktop was never displayed yet, and didn't start as the active desktop, retrieve\nthe desktop widget data, and re-execute this function (recursion!)",
            "itemtype": "method",
            "name": "initWidgets",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopView.js",
            "line": 188,
            "description": "event-handler when a new widget is added from the content-library",
            "params": [
                {
                    "name": "widgetModel",
                    "description": "",
                    "type": "WidgetModel"
                }
            ],
            "itemtype": "method",
            "name": "onAddNewWidget",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopView.js",
            "line": 220,
            "description": "widget-collection.add(widget) event-handler (creates the view)",
            "params": [
                {
                    "name": "model",
                    "description": "",
                    "type": "WidgetModel"
                },
                {
                    "name": "collection",
                    "description": "",
                    "type": "WidgetCollection"
                },
                {
                    "name": "params",
                    "description": "",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "onCollectionAdd",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopView.js",
            "line": 240,
            "description": "the hub just triggered a resize event - re-evaulate column size and widget layouts\n\nnote: \"gridster.cols\" is inaccurate (big surprise -.-) it doesn't goes lower than it's initial\n      starting size, so I'm internally keeping track of the column-count instead.",
            "itemtype": "method",
            "name": "onWindowResize",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DesktopView.js",
            "line": 258,
            "description": "called from the re-size callback when its time to reinit gridster and widgets",
            "params": [
                {
                    "name": "columnCount",
                    "description": "- the new column count",
                    "type": "Number"
                }
            ],
            "itemtype": "method",
            "name": "resizeReInit",
            "access": "private",
            "tagname": "",
            "class": "view.DesktopView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DevMenuView.js",
            "line": 19,
            "description": "defines all events interacting with this view's DOM element",
            "itemtype": "property",
            "name": "events",
            "readonly": "",
            "access": "protected",
            "tagname": "",
            "type": "Object",
            "class": "view.DevMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DevMenuView.js",
            "line": 34,
            "description": "init template",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "view.DevMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DevMenuView.js",
            "line": 45,
            "description": "forces a heartbeat to execute",
            "itemtype": "method",
            "name": "forceHeartbeat",
            "access": "private",
            "tagname": "",
            "class": "view.DevMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DevMenuView.js",
            "line": 55,
            "description": "removes all widgets from the desktop",
            "itemtype": "method",
            "name": "removeAll",
            "access": "private",
            "tagname": "",
            "class": "view.DevMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DevMenuView.js",
            "line": 90,
            "description": "open service center in a new window",
            "itemtype": "method",
            "name": "serviceCenter",
            "access": "private",
            "tagname": "",
            "class": "view.DevMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\DevMenuView.js",
            "line": 108,
            "description": "navigate to the /debug/ directory",
            "itemtype": "method",
            "name": "gotoDebug",
            "access": "private",
            "tagname": "",
            "class": "view.DevMenuView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ExpirationView.js",
            "line": 19,
            "description": "defines all events interacting with this view's DOM element",
            "itemtype": "property",
            "name": "events",
            "readonly": "",
            "access": "protected",
            "tagname": "",
            "type": "Object",
            "class": "view.ExpirationView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ExpirationView.js",
            "line": 33,
            "description": "init the dom",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "view.ExpirationView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HelpMenuView.js",
            "line": 20,
            "description": "defines all events interacting with this view's DOM element",
            "itemtype": "property",
            "name": "events",
            "readonly": "",
            "access": "protected",
            "tagname": "",
            "type": "Object",
            "class": "view.HubHelpView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HelpMenuView.js",
            "line": 39,
            "description": "init template",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "view.HubHelpView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HelpMenuView.js",
            "line": 49,
            "description": "called from the hub view to display the help menu",
            "params": [
                {
                    "name": "cb",
                    "description": "- callbacks to hubView to remove the global \"hide\" click handler",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "show",
            "access": "public",
            "tagname": "",
            "class": "view.HubHelpView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HelpMenuView.js",
            "line": 80,
            "description": "user clicked the release notes link",
            "itemtype": "method",
            "name": "onReleaseNotes",
            "access": "private",
            "tagname": "",
            "class": "view.HubHelpView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HelpMenuView.js",
            "line": 96,
            "description": "user clicked the report a problem link",
            "itemtype": "method",
            "name": "onReportProblem",
            "access": "private",
            "tagname": "",
            "class": "view.HubHelpView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HelpMenuView.js",
            "line": 137,
            "description": "user clicked request an enhancement link",
            "itemtype": "method",
            "name": "onEnhancement",
            "access": "private",
            "tagname": "",
            "class": "view.HubHelpView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HelpMenuView.js",
            "line": 155,
            "description": "user clicked on ask a question",
            "itemtype": "method",
            "name": "onQuestion",
            "access": "private",
            "tagname": "",
            "class": "view.HubHelpView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HelpMenuView.js",
            "line": 166,
            "description": "user clicked on the walkthrough link",
            "itemtype": "method",
            "name": "onWalkthrough",
            "access": "private",
            "tagname": "",
            "class": "view.HubHelpView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HelpMenuView.js",
            "line": 180,
            "description": "popup blocker was detected - alert the user to allow them",
            "itemtype": "method",
            "name": "alertPopupBlocker",
            "access": "private",
            "tagname": "",
            "class": "view.HubHelpView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HelpMenuView.js",
            "line": 192,
            "description": "user clicked the wiki link",
            "itemtype": "method",
            "name": "onWiki",
            "access": "private",
            "tagname": "",
            "class": "view.HubHelpView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HelpMenuView.js",
            "line": 210,
            "description": "user clicked the style guide link",
            "itemtype": "method",
            "name": "onStyleGuide",
            "access": "private",
            "tagname": "",
            "class": "view.HubHelpView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HelpMenuView.js",
            "line": 228,
            "description": "user clicked the FAQ",
            "itemtype": "method",
            "name": "onFAQ",
            "access": "private",
            "tagname": "",
            "class": "view.HubHelpView",
            "module": "ConfirmationView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HtmlModalView.js",
            "line": 20,
            "description": "initialize dom",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "view.HtmlModalView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 48,
            "description": "defines all events interacting with this view's DOM element",
            "itemtype": "property",
            "name": "events",
            "readonly": "",
            "access": "protected",
            "tagname": "",
            "type": "Object",
            "class": "view.HubView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 75,
            "description": "the selector used as the 'off click' of navbar menus",
            "itemtype": "property",
            "name": "menuCloseSelector",
            "access": "private",
            "tagname": "",
            "type": "String",
            "readonly": "",
            "class": "view.HubView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 85,
            "description": "populate dynamic DOM elements",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "view.HubView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 194,
            "description": "initialize our hot-key handlers",
            "itemtype": "method",
            "name": "initHotKeys",
            "access": "private",
            "tagname": "",
            "class": "view.HubView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 220,
            "description": "launch appmode for the given hash, then init desktops \n-we want the appmode iframe loaded first\n-library widget reference-list is loaded async, may need to wait for it before executing",
            "params": [
                {
                    "name": "params",
                    "description": "- url query string params, which could have 5 different deeplink datapoints (-.-)",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "initDeepLink",
            "access": "private",
            "tagname": "",
            "class": "view.HubView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 307,
            "description": "initialize all of the desktop views\n\nre-ensure there is an active desktop to initialize on our initial load",
            "itemtype": "method",
            "name": "initDesktops",
            "access": "private",
            "tagname": "",
            "class": "view.HubView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 328,
            "description": "collection callback when a new desktop is added",
            "params": [
                {
                    "name": "desktopModel",
                    "description": "",
                    "type": "DesktopModel"
                }
            ],
            "itemtype": "method",
            "name": "onNewDesktop",
            "access": "private",
            "tagname": "",
            "class": "view.HubView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 347,
            "description": "collection callback when a desktop is removed",
            "params": [
                {
                    "name": "desktopModel",
                    "description": "",
                    "type": "DesktopModel"
                }
            ],
            "itemtype": "method",
            "name": "onRemoveDesktop",
            "access": "private",
            "tagname": "",
            "class": "view.HubView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 368,
            "description": "initialize the livewire \"reach\" plugin extension",
            "itemtype": "method",
            "name": "initLivewire",
            "access": "private",
            "tagname": "",
            "class": "view.HubView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 393,
            "description": "return the DesktopModel that is currently active",
            "return": {
                "description": "",
                "type": "DesktopModel"
            },
            "itemtype": "method",
            "name": "getActiveDesktopModel",
            "access": "public",
            "tagname": "",
            "class": "view.HubView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 406,
            "description": "determine and retrieve the desktop VIEW thats currently active",
            "return": {
                "description": "",
                "type": "DesktopView"
            },
            "itemtype": "method",
            "name": "getActiveDesktopView",
            "access": "private",
            "tagname": "",
            "class": "view.HubView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 427,
            "description": "event-handler when the user adds a new widget from content library",
            "params": [
                {
                    "name": "widgetModel",
                    "description": "",
                    "type": "WidgetModel"
                }
            ],
            "itemtype": "method",
            "name": "onAddNewWidget",
            "access": "private",
            "tagname": "",
            "class": "view.HubView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 444,
            "description": "called in a few difference methods to close the nav-bar search results",
            "itemtype": "method",
            "name": "closeNavbarSearchResults",
            "access": "private",
            "tagname": "",
            "class": "view.HubView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 457,
            "description": "the window just resized - get the active gridster and tell it to re-evaluate it's columns",
            "itemtype": "method",
            "name": "onWindowResize",
            "access": "private",
            "tagname": "",
            "class": "view.HubView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 473,
            "description": "user clicked the hub help icon",
            "itemtype": "method",
            "name": "onShowHelp",
            "access": "private",
            "tagname": "",
            "class": "view.HubView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 493,
            "description": "user clicked the alerts icon",
            "itemtype": "method",
            "name": "onShowAlerts",
            "access": "private",
            "tagname": "",
            "class": "view.HubView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 509,
            "description": "user clicked the desktop-menu icon",
            "itemtype": "method",
            "name": "onShowDesktopMenu",
            "access": "private",
            "tagname": "",
            "class": "view.HubView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 525,
            "description": "user clicked the TheHub Chat link",
            "itemtype": "method",
            "name": "onShowChat",
            "access": "private",
            "tagname": "",
            "class": "view.HubView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 538,
            "description": "user clicked the dev-menu trigger",
            "itemtype": "method",
            "name": "onShowDevMenu",
            "access": "private",
            "tagname": "",
            "class": "view.HubView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 559,
            "description": "user clicked on 'my info' link",
            "itemtype": "method",
            "name": "onMyInfo",
            "access": "private",
            "tagname": "",
            "class": "view.HubView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 578,
            "description": "user clicked theHub logo",
            "itemtype": "method",
            "name": "onReload",
            "access": "private",
            "tagname": "",
            "class": "view.HubView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 604,
            "description": "user clicked the content library icon on the navbar",
            "itemtype": "method",
            "name": "onShowContentLibrary",
            "access": "public",
            "tagname": "",
            "class": "view.HubView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 628,
            "description": "user clicked the news icon on the navbar",
            "itemtype": "method",
            "name": "onShowNews",
            "access": "public",
            "tagname": "",
            "class": "view.HubView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 646,
            "description": "user just clicked the search-input, only log the metric event",
            "itemtype": "method",
            "name": "onSearchFocus",
            "access": "private",
            "tagname": "",
            "class": "view.HubView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\HubView.js",
            "line": 656,
            "description": "user just clicked on the submit-incident icon on the navbar",
            "itemtype": "method",
            "name": "onSubmitIncident\nprivate",
            "class": "view.HubView",
            "module": "HtmlModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\IframeAppmodeView.js",
            "line": 20,
            "description": "defines all events interacting with this view's DOM element",
            "itemtype": "property",
            "name": "events",
            "readonly": "",
            "access": "protected",
            "tagname": "",
            "type": "Object",
            "class": "view.IframeAppmodeView",
            "module": "IframeAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\IframeAppmodeView.js",
            "line": 32,
            "description": "init dom and events",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "view.IframeAppmodeView",
            "module": "IframeAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\IframeAppmodeView.js",
            "line": 55,
            "description": "quit out of appmode",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "noCallback",
                    "description": "- override this from calling the \"onClose\" callback",
                    "type": "Boolean"
                }
            ],
            "itemtype": "method",
            "name": "quitAppmode",
            "access": "private",
            "tagname": "",
            "class": "view.IframeAppmodeView",
            "module": "IframeAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\IframeModalView.js",
            "line": 20,
            "description": "initialize a modal, set title and iframe url",
            "itemtype": "method",
            "name": "initialize",
            "access": "private",
            "tagname": "",
            "class": "view.IframeModalView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ModalView.js",
            "line": 27,
            "description": "defines all events interacting with this view's DOM element",
            "itemtype": "property",
            "name": "events",
            "readonly": "",
            "access": "protected",
            "tagname": "",
            "type": "Object",
            "class": "view.ModalView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ModalView.js",
            "line": 44,
            "description": "init template",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "view.ModalView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ModalView.js",
            "line": 110,
            "description": "renders the modal to the dom",
            "itemtype": "method",
            "name": "render",
            "access": "private",
            "tagname": "",
            "class": "view.ModalView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ModalView.js",
            "line": 126,
            "description": "called from dirived children to set the modal's body",
            "params": [
                {
                    "name": "bodyContent",
                    "description": "- html or jquery selection of what will be the content of this modal",
                    "type": "JQuery || Html"
                }
            ],
            "itemtype": "method",
            "name": "setContent",
            "access": "protected",
            "tagname": "",
            "class": "view.ModalView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ModalView.js",
            "line": 142,
            "description": "called from dirived children to set the modal's footer",
            "params": [
                {
                    "name": "footerContent",
                    "description": "- html or jquery select of what will be in the footer",
                    "type": "JQuery || Html"
                }
            ],
            "itemtype": "method",
            "name": "setFooter",
            "access": "protected",
            "tagname": "",
            "class": "view.ModalView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ModalView.js",
            "line": 158,
            "description": "removes the close icon, and removes the backdrop-close handler, \nuser must interact with any footer content in order to close the modal",
            "itemtype": "method",
            "name": "forceInteraction",
            "access": "protected",
            "tagname": "",
            "class": "view.ModalView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ModalView.js",
            "line": 170,
            "description": "toggled via the IframeModalView to turn on the iframe listening logic",
            "params": [
                {
                    "name": "$iframe",
                    "description": "- the iframe to listen to",
                    "type": "JQuery"
                }
            ],
            "itemtype": "method",
            "name": "navigation",
            "access": "protected",
            "tagname": "",
            "class": "view.ModalView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ModalView.js",
            "line": 186,
            "description": "event listener for when the navigation iframe changes source",
            "itemtype": "method",
            "name": "onIframeSrcChange",
            "access": "private",
            "tagname": "",
            "class": "view.ModalView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ModalView.js",
            "line": 202,
            "description": "user clicked the nav-back button",
            "itemtype": "method",
            "name": "onNavBack",
            "access": "private",
            "tagname": "",
            "class": "view.ModalView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ModalView.js",
            "line": 218,
            "description": "user just clicked on the deeplink icon",
            "itemtype": "method",
            "name": "onDeepLink",
            "access": "private",
            "tagname": "",
            "class": "view.ModalView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ModalView.js",
            "line": 259,
            "description": "user clicked the \"close deeplink message\" icon",
            "itemtype": "method",
            "name": "onCloseDeepLink",
            "access": "private",
            "tagname": "",
            "class": "view.ModalView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ModalView.js",
            "line": 272,
            "description": "user clicked the deep link url, follow the url in a new tab",
            "itemtype": "method",
            "name": "onFollowDeepLink",
            "access": "private",
            "tagname": "",
            "class": "view.ModalView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ModalView.js",
            "line": 290,
            "description": "copy the deeplink url to the clip board\nnote: class selector - there can only be one ('should' only be one, but I needed the highlander quote)",
            "itemtype": "method",
            "name": "onDeeplinkCopy",
            "access": "private",
            "tagname": "",
            "class": "view.ModalView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ModalView.js",
            "line": 320,
            "description": "user clicked the close button",
            "itemtype": "method",
            "name": "onClose",
            "access": "private",
            "tagname": "",
            "class": "view.ModalView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsChannelListView.js",
            "line": 19,
            "description": "initialize the dom",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "view.NewsChannelList",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsChannelListView.js",
            "line": 66,
            "description": "toggle the subscription of the clicked-on channel",
            "itemtype": "method",
            "name": "onToggleSubscribe",
            "access": "private",
            "tagname": "",
            "class": "view.NewsChannelList",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 26,
            "description": "defines all events interacting with this view's DOM element",
            "itemtype": "property",
            "name": "events",
            "readonly": "",
            "access": "protected",
            "tagname": "",
            "type": "Object",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 50,
            "description": "init dom, events, do jumping jacks, etc...",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 86,
            "description": "called on collection.add() - a new channel was added (through the heartbeat)",
            "itemtype": "method",
            "name": "addChannel",
            "access": "private",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 102,
            "description": "callback when an article is added through the heartbeat",
            "itemtype": "method",
            "name": "onAddArticle",
            "access": "private",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 120,
            "description": "determines how many unread articles are badged on the navbar",
            "itemtype": "method",
            "name": "updateTotalCount",
            "access": "private",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 138,
            "description": "update the count badges for each channel",
            "itemtype": "method",
            "name": "updateChannelCount",
            "access": "private",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 155,
            "description": "populate the side-bar list of subscribed channels",
            "itemtype": "method",
            "name": "populateChannels",
            "access": "private",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 170,
            "description": "request for a new list of channels, and re-render the channel list",
            "itemtype": "method",
            "name": "refreshChannels",
            "access": "private",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 200,
            "description": "user clicked a channel - render the article panel",
            "itemtype": "method",
            "name": "onViewChannel",
            "access": "private",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 227,
            "description": "populate the list of articles",
            "params": [
                {
                    "name": "articleList",
                    "description": "",
                    "type": "NewsArticleModel[]"
                }
            ],
            "itemtype": "method",
            "name": "populateArticles",
            "access": "private",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 277,
            "description": "renders the pagination buttons on the content-footer",
            "params": [
                {
                    "name": "pageList",
                    "description": "",
                    "type": "JQuery[]"
                }
            ],
            "itemtype": "method",
            "name": "createPagination",
            "access": "private",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 317,
            "description": "determine if the pagination should be considered \"small-mode\"\nthis is toggled when there's too many buttons on the bottom to fit",
            "itemtype": "method",
            "name": "togglePaginationSize",
            "access": "private",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 339,
            "description": "user clicked the previous page button",
            "itemtype": "method",
            "name": "onPreviousPage",
            "access": "private",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 374,
            "description": "user clicked a specific page icon",
            "itemtype": "method",
            "name": "onSelectPage",
            "access": "private",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 407,
            "description": "user clicked the next page button",
            "itemtype": "method",
            "name": "onNextPage",
            "access": "private",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 442,
            "description": "user clicked an article - view it and mark it as viewed",
            "itemtype": "method",
            "name": "onViewArticle",
            "access": "private",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 502,
            "description": "user clicked the 'select-all' button",
            "itemtype": "method",
            "name": "onSelectAll",
            "access": "private",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 512,
            "description": "resets all selections to un-checked",
            "itemtype": "method",
            "name": "resetSelectAll",
            "access": "private",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 522,
            "description": "mark the selected articles as read",
            "itemtype": "method",
            "name": "onMarkAll",
            "access": "private",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 558,
            "description": "user clicked the 'create a new channel' icon",
            "itemtype": "method",
            "name": "onCreateChannel",
            "access": "private",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 573,
            "description": "user clicked the manage channels option from the dropdown",
            "itemtype": "method",
            "name": "onManageChannels",
            "access": "private",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 588,
            "description": "user clicked the subscribe to channels option from the dropdown",
            "itemtype": "method",
            "name": "onSubscribeChannels",
            "access": "private",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 606,
            "description": "user clicked the new article option from the dropdown",
            "itemtype": "method",
            "name": "onNewArticle",
            "access": "private",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 623,
            "description": "an input occured on the search input box - update search results",
            "itemtype": "method",
            "name": "onArticleSearch",
            "access": "private",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 644,
            "description": "internally used to block excessive show/hide calls",
            "itemtype": "property",
            "name": "isVisible",
            "access": "public",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 652,
            "description": "cached reference to the desktop-cover",
            "itemtype": "property",
            "name": "_$backdrop",
            "access": "private",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 660,
            "description": "animate the News panel in",
            "params": [
                {
                    "name": "cb",
                    "description": "- optional on-complete callback",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "onShow",
            "access": "private",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\NewsView.js",
            "line": 698,
            "description": "animate the News panel out",
            "params": [
                {
                    "name": "cb",
                    "description": "- optional on-complete callback",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "onHide",
            "access": "private",
            "tagname": "",
            "class": "view.NewsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\SearchResultsView.js",
            "line": 19,
            "description": "defines all events interacting with this view's DOM element",
            "itemtype": "property",
            "name": "events",
            "readonly": "",
            "access": "protected",
            "tagname": "",
            "type": "Object",
            "class": "view.SearchResultsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\SearchResultsView.js",
            "line": 34,
            "description": "initialize templates and handlers",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "view.SearchResultsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\SearchResultsView.js",
            "line": 50,
            "description": "user just pushed a key, check for some of our nifty features like arrow-navigation or escape",
            "itemtype": "method",
            "name": "onNavbarKeydown",
            "access": "private",
            "tagname": "",
            "class": "view.SearchResultsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\SearchResultsView.js",
            "line": 76,
            "description": "get the index of the argued element, within the list of all elements",
            "params": [
                {
                    "name": "$el",
                    "description": "- a single selection",
                    "type": "JQuery"
                },
                {
                    "name": "$all",
                    "description": "- all possible elements",
                    "type": "JQuery"
                }
            ],
            "return": {
                "description": "the index of $el within $all, or null",
                "type": "Number"
            },
            "itemtype": "method",
            "name": "getSelectionIndex",
            "access": "private",
            "tagname": "",
            "class": "view.SearchResultsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\SearchResultsView.js",
            "line": 101,
            "description": "user just arrowed-up, change selection",
            "itemtype": "method",
            "name": "selectUp",
            "access": "private",
            "tagname": "",
            "class": "view.SearchResultsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\SearchResultsView.js",
            "line": 122,
            "description": "user just arrowed-down, change selection",
            "itemtype": "method",
            "name": "selectDown",
            "access": "private",
            "tagname": "",
            "class": "view.SearchResultsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\SearchResultsView.js",
            "line": 143,
            "description": "user just clicked enter on their selection, spawn the widget or service",
            "itemtype": "method",
            "name": "spawnSelection",
            "access": "private",
            "tagname": "",
            "class": "view.SearchResultsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\SearchResultsView.js",
            "line": 165,
            "description": "user just typed something in the nav-bar search input",
            "itemtype": "method",
            "name": "onNavbarSearch",
            "access": "private",
            "tagname": "",
            "class": "view.SearchResultsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\SearchResultsView.js",
            "line": 206,
            "description": "renders the search results from the navbar",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "Event"
                },
                {
                    "name": "results",
                    "description": "- {widgets:[WidgetModel], services:[ServiceModel]}",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "renderSearchResults",
            "access": "private",
            "tagname": "",
            "class": "view.SearchResultsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\SearchResultsView.js",
            "line": 274,
            "description": "user clicked the 'add widget' from the navbar search",
            "itemtype": "method",
            "name": "onAddWidget",
            "access": "private",
            "tagname": "",
            "class": "view.SearchResultsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\SearchResultsView.js",
            "line": 310,
            "description": "user clicked the 'launch appmode' from the navbar search",
            "itemtype": "method",
            "name": "onAppmode",
            "access": "private",
            "tagname": "",
            "class": "view.SearchResultsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\SearchResultsView.js",
            "line": 344,
            "description": "user launched a service from the navbar search",
            "itemtype": "method",
            "name": "onService",
            "access": "private",
            "tagname": "",
            "class": "view.SearchResultsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\SearchResultsView.js",
            "line": 375,
            "description": "user clicked the 'search emc' link from the nav-bar search results",
            "itemtype": "method",
            "name": "onSearchEmc",
            "access": "private",
            "tagname": "",
            "class": "view.SearchResultsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\SearchResultsView.js",
            "line": 400,
            "description": "internally called to hide results, clear input, and clear current results",
            "itemtype": "method",
            "name": "clearView",
            "access": "private",
            "tagname": "",
            "class": "view.SearchResultsView",
            "module": "IframeModalView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ToastView.js",
            "line": 20,
            "description": "defines all events interacting with this view's DOM element",
            "itemtype": "property",
            "name": "events",
            "readonly": "",
            "access": "protected",
            "tagname": "",
            "type": "Object",
            "class": "view.ToastView",
            "module": "ToastView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ToastView.js",
            "line": 32,
            "description": "color used for 'successful' messages\naccess this property through the prototype, \"ToastView.prototype.SuccessColor\"",
            "itemtype": "property",
            "name": "SuccessColor",
            "default": "#AEF2AC",
            "readonly": "",
            "access": "public",
            "tagname": "",
            "class": "view.ToastView",
            "module": "ToastView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ToastView.js",
            "line": 43,
            "description": "color used for 'informational' messages\naccess this property through the prototype, \"ToastView.prototype.InfoColor\"",
            "itemtype": "property",
            "name": "InfoColor",
            "default": "#ACD3F2",
            "readonly": "",
            "access": "public",
            "tagname": "",
            "class": "view.ToastView",
            "module": "ToastView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ToastView.js",
            "line": 54,
            "description": "color used for 'warning' messages\naccess this property through the prototype, \"ToastView.prototype.WarningColor\"",
            "itemtype": "property",
            "name": "WarningColor",
            "default": "#F2E5AC",
            "readonly": "",
            "access": "public",
            "tagname": "",
            "class": "view.ToastView",
            "module": "ToastView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ToastView.js",
            "line": 65,
            "description": "color used for 'error' messages\naccess this property through the prototype, \"ToastView.prototype.ErrorColor\"",
            "itemtype": "property",
            "name": "ErrorColor",
            "default": "#F2ACBB",
            "readonly": "",
            "access": "public",
            "tagname": "",
            "class": "view.ToastView",
            "module": "ToastView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ToastView.js",
            "line": 76,
            "description": "initialize template",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "view.ToastView",
            "module": "ToastView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\ToastView.js",
            "line": 106,
            "description": "user clicked the dismiss button, or the timer has called this",
            "itemtype": "method",
            "name": "onDismiss",
            "access": "private",
            "tagname": "",
            "class": "view.ToastView",
            "module": "ToastView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\View.js",
            "line": 23,
            "description": "replaces all localization strings in the given html with entries found in strings argument",
            "params": [
                {
                    "name": "html",
                    "description": "- html to localize",
                    "type": "String"
                },
                {
                    "name": "strings",
                    "description": "- kv pair of identifiers and their localized text",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "_localize",
            "access": "protected",
            "tagname": "",
            "class": "view.View",
            "module": "ToastView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\View.js",
            "line": 47,
            "description": "entry point of this.template() - after getting/caching/validating the template",
            "params": [
                {
                    "name": "method",
                    "description": "- underscore templating function",
                    "type": "Function"
                },
                {
                    "name": "params",
                    "description": "- values to mix into html",
                    "type": "Object"
                },
                {
                    "name": "strings",
                    "description": "- localization strings",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "_templatize",
            "access": "protected",
            "tagname": "",
            "class": "view.View",
            "module": "ToastView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\View.js",
            "line": 61,
            "description": "gets an html template out of the hub's template.html file, or the supplied source argument,\nand replaces identifiers with values and string messages",
            "params": [
                {
                    "name": "tid",
                    "description": "- template element id",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "- values to mix into html, {{ ID }}",
                    "type": "Object"
                },
                {
                    "name": "strings",
                    "description": "- localization strings, ||str:ID||",
                    "type": "Object"
                },
                {
                    "name": "source",
                    "description": "- optional parameter when the default templates.html is not used\n                      source should be used by integrated widgets only.",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "template",
            "access": "public",
            "tagname": "",
            "class": "view.View",
            "module": "ToastView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\View.js",
            "line": 90,
            "description": "add a new stylesheet to the DOM, calling back when complete.\n\nnote: the link will be considered a timeout-failure in 15 seconds\nnote: will not work with an empty css file\nnote: if a link with a matching href is already found, the callback will immediately be executed\nnote: should NOT be abused, causes a full dom reflow evaluation",
            "params": [
                {
                    "name": "path",
                    "description": "- the relative path starting from index.html directory",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "- callback executed when the stylesheet has been downloaded and linked",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "- optional context to call the callback with ('this' = context)",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "addStylesheet",
            "access": "public",
            "tagname": "",
            "class": "view.View",
            "module": "ToastView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WalkthroughView.js",
            "line": 20,
            "description": "initialize the walkthrough",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "view.WalkthroughView",
            "module": "ToastView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WalkthroughView.js",
            "line": 49,
            "description": "silly user agreed to begin the walkthrough.. fool! I WILL DEVOUR YOU!",
            "itemtype": "method",
            "name": "onBeginWalkthrough",
            "access": "private",
            "tagname": "",
            "class": "view.WalkthroughView",
            "module": "ToastView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WalkthroughView.js",
            "line": 59,
            "description": "the user completed a step, good for freakin' you.",
            "itemtype": "method",
            "name": "onNextStep",
            "access": "private",
            "tagname": "",
            "class": "view.WalkthroughView",
            "module": "ToastView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WalkthroughView.js",
            "line": 71,
            "description": "defines what index within all steps the user is currently at",
            "itemtype": "property",
            "name": "stepIndex",
            "type": "{Number}",
            "access": "private",
            "tagname": "",
            "class": "view.WalkthroughView",
            "module": "ToastView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WalkthroughView.js",
            "line": 80,
            "description": "defines all of the walkthrough step implementations",
            "itemtype": "property",
            "name": "steps",
            "type": "{Array}",
            "access": "private",
            "tagname": "",
            "class": "view.WalkthroughView",
            "module": "ToastView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetAppmodeView.js",
            "line": 20,
            "description": "defines all events interacting with this view's DOM element",
            "itemtype": "property",
            "name": "events",
            "readonly": "",
            "access": "protected",
            "tagname": "",
            "type": "Object",
            "class": "view.WidgetAppmodeView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetAppmodeView.js",
            "line": 34,
            "description": "initialize template and events",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "view.WidgetAppmodeView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetAppmodeView.js",
            "line": 58,
            "description": "load a widget's appmode that already has an instance",
            "itemtype": "method",
            "name": "loadInstance",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetAppmodeView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetAppmodeView.js",
            "line": 95,
            "description": "save a widget that has no instance, then load appmode",
            "itemtype": "method",
            "name": "loadTemporary",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetAppmodeView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetAppmodeView.js",
            "line": 122,
            "description": "model callback when \"AppmodeTitle\" changes in value\nnote: will not change the title if the user set an alias",
            "params": [
                {
                    "name": "model",
                    "description": "",
                    "type": "WidgetModel"
                },
                {
                    "name": "val",
                    "description": "- the new name",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "onTitleChange",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetAppmodeView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetAppmodeView.js",
            "line": 144,
            "description": "user just clicked the close-appmode button",
            "itemtype": "method",
            "name": "onCloseAppmode",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetAppmodeView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetAppmodeView.js",
            "line": 162,
            "description": "user just clicked the deeplink button",
            "itemtype": "method",
            "name": "onDeeplink",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetAppmodeView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetAppmodeView.js",
            "line": 179,
            "description": "this widget does not need to save data, request for a hash and display it to the user",
            "itemtype": "method",
            "name": "noSaveDeepLink",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetAppmodeView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetAppmodeView.js",
            "line": 214,
            "description": "this widget needs to save data, message into the widget telling it to start it's deeplink process",
            "itemtype": "method",
            "name": "withSaveDeepLink",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetAppmodeView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetAppmodeView.js",
            "line": 231,
            "description": "user clicked the help button",
            "itemtype": "method",
            "name": "onHelp",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetAppmodeView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 20,
            "description": "defines all events interacting with this view's DOM element",
            "itemtype": "property",
            "name": "events",
            "readonly": "",
            "access": "protected",
            "tagname": "",
            "type": "Object",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 43,
            "description": "initialize DOM elements",
            "itemtype": "method",
            "name": "initialize",
            "access": "protected",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 115,
            "description": "entry point to initialize the iframe/1x1/noiframe widget content",
            "params": [
                {
                    "name": "layout",
                    "description": "- the current layout determined in .initialize()",
                    "type": "WidgetLayoutModel"
                }
            ],
            "itemtype": "method",
            "name": "initContents",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 159,
            "description": "the possible class list for no-firame widgets",
            "itemtype": "property",
            "name": "noIframeClassList",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 179,
            "description": "for no-iframes, update the content-class so the widget can have a responsive mechanism",
            "params": [
                {
                    "name": "layout",
                    "description": "- the current layout",
                    "type": "WidgetLayoutModel"
                }
            ],
            "itemtype": "method",
            "name": "addNoIframeClass",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 193,
            "description": "determines in this widget is a 1x1 with no content\nTODO: poor implementation purposely done due to current widget registration data",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "isNoContent1x1",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 210,
            "description": "removes any footer icons which do not belong for this widget",
            "itemtype": "method",
            "name": "initFooter",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 226,
            "description": "inserts the size-dropdown",
            "itemtype": "method",
            "name": "initSizes",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 242,
            "description": "called during init on a readonly desktop",
            "itemtype": "method",
            "name": "setToReadyOnly",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 252,
            "description": "helper function to retrieve the current layout model\nnote: theres a server error adding duplicates, the error handling here will return the last in the list",
            "return": {
                "description": "",
                "type": "WidgetLayoutModel"
            },
            "itemtype": "method",
            "name": "getCurrentSize",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 271,
            "description": "model change:Name callback, update the name on the DOM",
            "params": [
                {
                    "name": "model",
                    "description": "",
                    "type": "WidgetModel"
                },
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "onNameChange",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 284,
            "description": "user re-named the widget from the config page",
            "itemtype": "method",
            "name": "onRename",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 320,
            "description": "the user just clicked a new size from the dropdown",
            "itemtype": "method",
            "name": "onChangeSize",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 395,
            "description": "the user attempted to resize, when there weren't enough columns to do so",
            "itemtype": "method",
            "name": "resizeFail",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 407,
            "description": "user just launched this widget into appmode",
            "itemtype": "method",
            "name": "onAppmode",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 429,
            "description": "user just clicked for widget settings",
            "itemtype": "method",
            "name": "onSettings",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 445,
            "description": "slide up the settings page",
            "params": [
                {
                    "name": "currentSize",
                    "description": "- currnet layout info",
                    "type": "SizeModel"
                }
            ],
            "itemtype": "method",
            "name": "showSettings",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 477,
            "description": "slide down the settings page",
            "params": [
                {
                    "name": "currentSize",
                    "description": "- current layout info",
                    "type": "SizeModel"
                }
            ],
            "itemtype": "method",
            "name": "hideSettings",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 526,
            "description": "user just clicked the 'submit a bug'",
            "itemtype": "method",
            "name": "onSubmitBug",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 566,
            "description": "user just clicked the help icon",
            "itemtype": "method",
            "name": "onHelp",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 589,
            "description": "user just clicked the remove button",
            "itemtype": "method",
            "name": "onRemove",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 619,
            "description": "does the center + scrolling logic at all different sizes",
            "itemtype": "method",
            "name": "initTitle",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 655,
            "description": "user moused over the title which was already determined to have 'ticker' style\nset a hard-left on the title, and let the css-transition do the rest",
            "itemtype": "method",
            "name": "onMouseTitleIn",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 670,
            "description": "user moused out of the title, undo the mouseenter\n(we just need to remove the hard-set left position)",
            "itemtype": "method",
            "name": "onMouseTitleOut",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 681,
            "description": "user clicks the e-mail author link",
            "itemtype": "method",
            "name": "onEmailAuthor",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 692,
            "description": "user's mouse is on the footer-trigger, slide the widget-nav up",
            "itemtype": "method",
            "name": "onShowFooter",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\view\\WidgetView.js",
            "line": 707,
            "description": "user moved out of the footer, or fast enough to be out of the widget entirely, hide the footer",
            "itemtype": "method",
            "name": "onHideFooter",
            "access": "private",
            "tagname": "",
            "class": "view.WidgetView",
            "module": "WidgetAppmodeView",
            "namespace": "view"
        },
        {
            "file": "ClientSrc\\js\\router.js",
            "line": 51,
            "description": "defines all hash-navigations, and their respective methods to call when triggered",
            "itemtype": "property",
            "name": "routes",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "view.Router",
            "module": "App"
        },
        {
            "file": "ClientSrc\\js\\router.js",
            "line": 67,
            "description": "defines a list of all possible body-classes",
            "itemtype": "property",
            "name": "bodyClass",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "view.Router",
            "module": "App"
        },
        {
            "file": "ClientSrc\\js\\router.js",
            "line": 86,
            "description": "beginning of start-up procedures\n  - first localize any string tokens in the critical render, \n  - check for a valid browser before moving on",
            "itemtype": "method",
            "name": "_startup",
            "access": "private",
            "tagname": "",
            "class": "view.Router",
            "module": "App"
        },
        {
            "file": "ClientSrc\\js\\router.js",
            "line": 107,
            "description": "replace string tokens within critical-render elements,\nwarning: browser reflow nightmare.",
            "itemtype": "method",
            "name": "_localizeDom",
            "access": "private",
            "tagname": "",
            "class": "view.Router",
            "module": "App"
        },
        {
            "file": "ClientSrc\\js\\router.js",
            "line": 121,
            "description": "retrieve hub/user models - begin application contruction",
            "params": [
                {
                    "name": "params",
                    "description": "- query string parameters",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "- on complete callback",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "_loadStartup",
            "access": "private",
            "tagname": "",
            "class": "view.Router",
            "module": "App"
        },
        {
            "file": "ClientSrc\\js\\router.js",
            "line": 136,
            "description": "go to an SSO-outsystems page, to init the OS-session",
            "params": [
                {
                    "name": "params",
                    "description": "- url parameters, possibly with EmployeeID acting as a backend override",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "- callback when complete",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "_initSession",
            "access": "private",
            "tagname": "",
            "class": "view.Router",
            "module": "App"
        },
        {
            "file": "ClientSrc\\js\\router.js",
            "line": 220,
            "description": "called after the outsystems session has been initialized\nload the Hub/User models",
            "params": [
                {
                    "name": "token",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "userId",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "params",
                    "description": "- url arguments",
                    "type": "Object"
                },
                {
                    "name": "onComplete",
                    "description": "",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "_loadAppModels",
            "access": "private",
            "tagname": "",
            "class": "view.Router",
            "module": "App"
        },
        {
            "file": "ClientSrc\\js\\router.js",
            "line": 290,
            "description": "load widget/service collections,\nnot needed for the main start-up process, but need to get this going as soon as possible,\nwidgetCollection is the largest/longest request we have",
            "params": [
                {
                    "name": "Ajax",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "UserModel",
                    "description": "",
                    "type": "UserModel"
                }
            ],
            "itemtype": "method",
            "name": "_loadCollections",
            "access": "private",
            "tagname": "",
            "class": "view.Router",
            "module": "App"
        },
        {
            "file": "ClientSrc\\js\\router.js",
            "line": 324,
            "description": "go to the last-used desktop",
            "itemtype": "method",
            "name": "navToDesktop",
            "access": "private",
            "tagname": "",
            "class": "view.Router",
            "module": "App"
        },
        {
            "file": "ClientSrc\\js\\router.js",
            "line": 343,
            "description": "go to the fatal-error screen\nnote: this will check if we attempted to load yet (if the user refreshed on the fatalerror hash)\n      if so, re-navigate to \"home\" and try again.",
            "itemtype": "method",
            "name": "navToFatal",
            "access": "private",
            "tagname": "",
            "class": "view.Router",
            "module": "App"
        },
        {
            "file": "ClientSrc\\js\\router.js",
            "line": 365,
            "description": "for testing/dev purposes only - brings the initial-loading screen up",
            "itemtype": "method",
            "name": "navToLoading",
            "access": "private",
            "tagname": "",
            "class": "view.Router",
            "module": "App"
        },
        {
            "file": "ClientSrc\\js\\router.js",
            "line": 379,
            "description": "for testing/dev purposes only - brings up the invalid-browser screen",
            "itemtype": "method",
            "name": "navToInvalid",
            "access": "private",
            "tagname": "",
            "class": "view.Router",
            "module": "App"
        },
        {
            "file": "ClientSrc\\js\\router.js",
            "line": 399,
            "description": "when the site property flag \"IsMaintenanceBreak\" is true, or becomes true through the HeartBeat, this \nnavigation will be triggered, landing the user on a \"come back later\" page",
            "itemtype": "method",
            "name": "navToMaintenance",
            "access": "private",
            "tagname": "",
            "class": "view.Router",
            "module": "App"
        },
        {
            "file": "ClientSrc\\js\\router.js",
            "line": 420,
            "description": "stops silly developers from doing href=\"#!\" - which is incompatible here, and is bad-practice\nif you are reading this, try doing href='javascript:;' instead.",
            "itemtype": "method",
            "name": "devError",
            "access": "private",
            "tagname": "",
            "class": "view.Router",
            "module": "App"
        },
        {
            "file": "ClientSrc\\js\\router.js",
            "line": 531,
            "description": "if a user sits on the hub with a broadcast message visible, and waits long enough for\na heartbeat to come back with the same messages, this array storing their ID's prevents duplicate\nmessages from being seen",
            "itemtype": "property",
            "name": "seenBroadcasts",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "view.Router",
            "module": "App",
            "submodule": "HeartBeat"
        },
        {
            "file": "ClientSrc\\js\\router.js",
            "line": 990,
            "description": "retrieve the plugin-icon stylesheet \n(I don't like this... outsystems doesn't make it easy)",
            "itemtype": "method",
            "name": "LoadPluginIcons",
            "access": "public",
            "tagname": "",
            "class": "view.Router",
            "module": "App",
            "submodule": "Metrics"
        }
    ],
    "warnings": []
}